{
  "version": 3,
  "sources": ["../../../../data/mods/teramax/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\tzenmode: {\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Darmanitan' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (move.category === 'Special' && !['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Zen Mode');\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanzen') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\tshortDesc: \"This Pokemon transforms at the start of the turn if it selects a special move.\",\r\n\t\trating: 3,\r\n\t\tnum: 161,\r\n\t},\r\n\tgorillatactics: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t\tif (pokemon.hasItem('choiceband') || pokemon.hasItem('choicescarf') || pokemon.hasItem('choicespecs')) {\r\n\t\t\t\tpokemon.addVolatile('embargo');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityState.choiceLock && pokemon.abilityState.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Gorilla Tactics\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityState.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityState.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 1,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Gorilla Tactics Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityState.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityState.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tname: \"Gorilla Tactics\",\r\n\t\trating: 4,\r\n\t\tnum: 255,\r\n\t\tshortDesc: \"Pokemon's Atk is 1.5x, but it can only select one move. Choice items are disabled.\",\r\n\t},\r\n\tbeadsofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Beads of Ruin');\r\n\t\t},\r\n\t\tonAnyModifyAccuracyPriority: -1,\r\n\t\tonAnyModifyAccuracy(accuracy, target, source) {\r\n\t\t\tif (source.isAlly(this.effectState.target) && typeof accuracy === 'number' && !target.hasAbility('Beads of Ruin')) {\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Beads of Ruin\",\r\n\t\trating: 4.5,\r\n\t\tnum: 284,\r\n\t\tshortDesc: \"Active Pokemon without this Ability have their Evasiveness multiplied by 0.75.\",\r\n\t},\r\n\tpowerspot: {\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tthis.debug('Power Spot boost');\r\n\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'powerspot');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is being powered up by the Power Spot!`);\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\treturn this.chainModify([5324, 4096]);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Power Spot\",\r\n\t\trating: 4,\r\n\t\tnum: 249,\r\n\t\tshortDesc: \"Active allies deal 1.3x more damage, as well as the next Pokemon in for one turn.\",\r\n\t},\r\n\ticeface: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Eiscue' || attacker.transformed) return;\r\n\t\t\tconst targetForme = (move.category === 'Status' ? 'Eiscue' : 'Eiscue-Noice');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Ice Face\",\r\n\t\trating: 3,\r\n\t\tnum: 248,\r\n\t\tshortDesc: \"If Eiscue, changes Forme to Noice before attacks and Base before a status move.\",\r\n\t},\r\n\tcommander: {\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tlet ratio = Math.floor(source.getStat('spe') / target.getStat('spe'));\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tif (ratio > 0) {\r\n\t\t\t\tif (target.hasType('Water') || target.hasType('Dragon')) {\r\n\t\t\t\t\treturn this.chainModify([5324, 4096]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (this.gameType !== 'doubles') return;\r\n\t\t\tconst ally = pokemon.allies()[0];\r\n\t\t\tif (!ally || pokemon.transformed ||\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Tatsugiri' || ally.baseSpecies.baseSpecies !== 'Dondozo') {\r\n\t\t\t\t// Handle any edge cases\r\n\t\t\t\tif (pokemon.getVolatile('commanding')) pokemon.removeVolatile('commanding');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pokemon.getVolatile('commanding')) {\r\n\t\t\t\t// If Dondozo already was commanded this fails\r\n\t\t\t\tif (ally.getVolatile('commanded')) return;\r\n\t\t\t\t// Cancel all actions this turn for pokemon if applicable\r\n\t\t\t\tthis.queue.cancelAction(pokemon);\r\n\t\t\t\t// Add volatiles to both pokemon\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Commander', '[of] ' + ally);\r\n\t\t\t\tpokemon.addVolatile('commanding');\r\n\t\t\t\tally.addVolatile('commanded', pokemon);\r\n\t\t\t\t// Continued in conditions.ts in the volatiles\r\n\t\t\t} else {\r\n\t\t\t\tif (!ally.fainted) return;\r\n\t\t\t\tpokemon.removeVolatile('commanding');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Commander\",\r\n\t\trating: 3,\r\n\t\tnum: 279,\r\n\t\tshortDesc: \"Slower Pokemon take 20% more damage. 30% if also Water or Dragon.\",\r\n\t},\r\n\tsteamengine: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Steam Engine');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Steam Engine');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Steam Engine weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Steam Engine weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Steam Engine\",\r\n\t\trating: 2,\r\n\t\tnum: 243,\r\n\t\tshortDesc: \"Immune to burn. 0.5x damage from Fire and Water moves. If hit: summons Sun.\",\r\n\t},\r\n\tgalewings: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (!this.queue.willMove(target) || move.type !== 'Flying') {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Gale Wings boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gale Wings\",\r\n\t\trating: 3,\r\n\t\tnum: 177,\r\n\t\tshortDesc: \"This Pokemon's Flying-type moves have 1.3x power if the user moves first.\",\r\n\t},\r\n\tmyceliummight: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tif (!target.hasType('Grass')) {\r\n\t\t\t\t\ttarget.addVolatile('leechseed');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Single-target status moves move last, but ignore abilities and inflict Leech Seed.\",\r\n\t\trating: 3,\r\n\t},\r\n\ticescales: {\r\n\t\tinherit: true,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move' && target.hp >= target.maxhp) {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', target, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Takes 1/2 damage from special attacks. Full HP: No damage from indirect sources.\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target"]
}

{
  "version": 3,
  "sources": ["../../../../data/mods/m4apaldea/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\taccumulate: {\r\n\t\tdesc: \"If this Pok\u00E9mon is a Mega Brambleghast, it calls for help and changes form at the end of each full turn it has been on the field, building up to Mega Brambleghast (Tangled Form) over five turns.\",\r\n\t\tshortDesc: \"More Brambleghast tangle up at the end of each turn.\",\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Brambleghast' || pokemon.transformed || !pokemon.hp || !pokemon.activeTurns ||\r\n\t\t\t\tpokemon.species.id === 'brambleghast' || pokemon.species.id === 'brambleghastmegatangled'\r\n\t\t\t) return;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Accumulate');\r\n\t\t\tthis.add('-message', `${pokemon.name} called for help!`);\r\n\t\t\tif (pokemon.species.id === 'brambleghastmega') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-1', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega1') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-2', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega2') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-3', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega3') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-4', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega4') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-Tangled', this.effect, true);\r\n\t\t\t}\r\n\t\t\tthis.add('-message', `More of ${pokemon.name}'s friends are getting tangled up!`);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tconst type2 = species.types[1];\r\n\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t) * pokemon.level / 100 + 10);\r\n      // no HP change unlike Wishiwashi\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Accumulate\",\r\n\t\trating: 5,\r\n\t\tnum: -2001,\r\n\t},\r\n\trenaturalization: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it clears the hazard and sets Grassy Terrain.\",\r\n\t\tshortDesc: \"Hazard immunity. Clears hazards, sets Grassy Terrain if switched in on them.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) && !this.field.getPseudoWeather('stickyresidues')) {\r\n\t\t\t\t\tif (!activated && !this.field.setTerrain('grassyterrain')) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Renaturalization');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] Ability: Renaturalization', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\tname: \"Renaturalization\",\r\n\t\trating: 5,\r\n\t\tnum: -2002,\r\n\t},\r\n\tpavise: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Pavise');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Dark' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Pavise');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tdesc: \"This Pokemon is immune to Dark-type moves and raises its Special Attack by 1 stage when hit by a Dark-type move. If this Pokemon is not the target of a single-target Dark-type move used by another Pokemon, this Pokemon redirects that move to itself if it is within the range of that move. If multiple Pokemon could redirect with this Ability, it goes to the one with the highest Speed, or in the case of a tie to the one that has had this Ability active longer.\",\r\n\t\tshortDesc: \"This Pokemon draws Dark moves to itself to raise Sp. Atk by 1; Dark immunity.\",\r\n\t\tname: \"Pavise\",\r\n\t\trating: 3,\r\n\t\tnum: -2003,\r\n\t},\r\n\tuplifting: {\r\n\t\tshortDesc: \"While this Pok\u00E9mon is present, all Pok\u00E9mon are non-grounded.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Uplifting');\r\n\t\t\tthis.add('-message', `While ${pokemon.name} is present, all Pok\u00E9mon are non-grounded.`);\r\n\t\t},\r\n\t\t// effect is in scripts.ts\r\n\t\tname: \"Uplifting\",\r\n\t\trating: 4,\r\n\t\tnum: -2004,\r\n\t},\r\n\ttarslosh: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Tar Slosh', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t\ttarget.addVolatile('tarslosh');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Tar', '[from] ability: Tar Slosh', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\t\tif (effect && effect.effectType === 'Move' && effect.type === 'Fire' && target === this.effectState.target) {\r\n\t\t\t\t\treturn damage * 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"On switch-in, lowers the Speed of every other Pokemon by 1 stage and makes them weak to Fire moves.\",\r\n\t\tname: \"Tar Slosh\",\r\n\t\trating: 3.5,\r\n\t\tnum: -2005,\r\n\t},\r\n\tlusterswap: {\r\n\t\tdesc: \"On entry, this Pok\u00E9mon's type changes to match its first move that's super effective against an adjacent opponent.\",\r\n\t\tshortDesc: \"On entry: type changes to match its first move that's super effective against an adjacent opponent.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\tconst moveType = move.id === 'hiddenpower' ? pokemon.hpType : move.type;\r\n\t\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\t\tif (!target || target.fainted || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, target) && this.dex.getEffectiveness(moveType, target) > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Luster Swap');\r\n\t\t\t\t\t\tif (!pokemon.setType(moveType)) continue;\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} changed its type to match its ${move.name}!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', moveType);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-ability', pokemon, 'Luster Swap');\r\n\t\t\tthis.add('-message', `${pokemon.name} can't hit any opponent super effectively!`);\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tname: \"Luster Swap\",\r\n\t\trating: 3,\r\n\t\tnum: -2006,\r\n\t},\r\n\ttwominded: {\r\n\t\tdesc: \"When this Pok\u00E9mon's Attack is modified, its Special Attack is modified in the opposite way, and vice versa. The same is true for its Defense and Special Defense.\",\r\n\t\tshortDesc: \"Applies the opposite of stat changes to the opposite stat (Atk/Sp. Atk, Def/Sp. Def).\",\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (!boost || effect.id === 'twominded') return;\r\n\t\t\tlet activated = false;\r\n\t\t\tconst twoMindedBoost: SparseBoostsTable = {};\r\n\t\t\tif (boost.spa) {\r\n\t\t\t\ttwoMindedBoost.atk = -1 * boost.spa;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.spd) {\r\n\t\t\t\ttwoMindedBoost.def = -1 * boost.spd;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.atk) {\r\n\t\t\t\ttwoMindedBoost.spa = -1 * boost.atk;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.def) {\r\n\t\t\t\ttwoMindedBoost.spd = -1 * boost.def;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (activated === true) {\r\n\t\t\t\tthis.add('-ability', target, 'Two-Minded');\r\n\t\t\t\tthis.boost(twoMindedBoost, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Two-Minded\",\r\n\t\trating: 4,\r\n\t\tnum: -2007,\r\n\t},\r\n\tcolorspray: {\r\n\t\tdesc: \"The first damaging move used against a target since it has switched in turns the target into that type.\",\r\n\t\tshortDesc: \"Turns a target into the type of the first damaging move used against it.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) return;\r\n\t\t\tif (this.effectState.colorspray) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (\r\n\t\t\t\ttarget.isActive && move.effectType === 'Move' && move.category !== 'Status' &&\r\n\t\t\t\ttype !== '???' && !target.hasType(type)\r\n\t\t\t) {\r\n\t\t\t\tif (!target.setType(type)) return false;\r\n\t\t\t\tthis.effectState.colorspray = true;\r\n\t\t\t\tthis.add('-start', target, 'typechange', type, '[from] ability: Color Change');\r\n\r\n\t\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t\t// Curse Glitch\r\n\t\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.colorspray;\r\n\t\t},\r\n\t\tname: \"Color Spray\",\r\n\t\trating: 4,\r\n\t\tnum: -2008,\r\n\t},\r\n\tendlessdream: {\r\n\t\tdesc: \"While this Pokemon is active, every other Pokemon is treated as if it has the Comatose ability. Pokemon that are either affected by Sweet Veil, or have Insomnia or Vital Spirit as their abilities are immune this effect.\",\r\n\t\tshortDesc: \"All Pokemon are under Comatose effect.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.getPseudoWeather('ultrasleep')) {\r\n\t\t\t\tthis.add('-ability', source, 'Endless Dream');\r\n\t\t\t\tthis.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.source = source;\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.duration = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-ability', source, 'Endless Dream');\r\n\t\t\t\tthis.field.addPseudoWeather('ultrasleep');\r\n\t\t\t\tthis.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTryMove(target, source, move) {\r\n\t\t\tif (['ultrasleep'].includes(move.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: Endless Dream', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 21,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('endlessdream')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.removePseudoWeather('ultrasleep');\r\n\t\t},\r\n\t\tname: \"Endless Dream\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\thairtrigger: {\r\n\t\tonAfterMega(pokemon) {\r\n\t\t\tif (pokemon.activeMoveActions > 1) return;\r\n\t\t\tpokemon.addVolatile('hairtrigger');\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.activeMoveActions > 1) return;\r\n\t\t\tpokemon.addVolatile('hairtrigger');\r\n\t\t},\r\n\t\tonModifyPriority(priority, source) {\r\n\t\t\tif (source.volatiles['hairtrigger']) {\r\n\t\t\t\tsource.removeVolatile('hairtrigger');\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"The user moves first in their priority bracket on the first turn after switching in.\",\r\n\t\tshortDesc: \"Moves first in priority bracket on the first turn after switching in.\",\r\n\t\tname: \"Hair Trigger\",\r\n\t\trating: 5,\r\n\t\tnum: -23,\r\n\t},\r\n\tpowdercoat: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Powder Coat Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Powder Coat SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Powder Coat\",\r\n\t\tdesc: \"This Pokemon takes 1/2 damages from indirect damage and water type moves.\",\r\n\t\tshortDesc: \"This Pokemon takes 1/2 damages from indirect damage and water type moves.\",\r\n\t\trating: 2,\r\n\t\tnum: -24,\r\n\t},\r\n\tlatedelivery: {\r\n\t\tdesc: \"This Pok\u00E9mon's non-contact Rock-type moves take effect two turns after being used. At the end of that turn, the damage is calculated at that time and dealt to the Pok\u00E9mon at the position the target had when the move was used. Only one move can be delayed at a time. If the user is no longer active at the time an attacking move should hit, damage is calculated based on the user's natural Attack or Special Attack stat, types, and level, with no boosts from its held item or Ability. Status moves are used by the Pok\u00E9mon at the position the user had when the move was used.\",\r\n\t\tshortDesc: \"Non-contact Rock-type moves delayed until two turns later, but only one at a time.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (\r\n\t\t\t\tmove && move.type === 'Rock' && !move.flags['contact'] && source.hasAbility('clairvoyance') &&\r\n\t\t\t\tsource.side.addSlotCondition(source, 'clairvoyance')\r\n\t\t\t) {\r\n\t\t\t\tObject.assign(source.side.slotConditions[source.position]['clairvoyance'], {\r\n\t\t\t\t\tduration: 3,\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\ttarget: null,\r\n\t\t\t\t\tmove: move,\r\n\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\tside: target.side,\r\n\t\t\t\t\tmoveData: this.dex.moves.get(move),\r\n\t\t\t\t});\r\n\t\t\t\tthis.add('-ability', source, 'Late Delivery');\r\n\t\t\t\tthis.add('-message', `${source.name} cast ${move.name} into the future!`);\r\n\t\t\t\tsource.deductPP(move.id, 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get(data.move);\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Late Delivery');\r\n\t\t\t\tif (!data.target) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because there was no target.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.add('-message', `${this.effectState.source.name}'s ${move.name} took effect!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\t\t\t\tdata.moveData.isFutureMove = true;\r\n\t\t\t\tdelete data.moveData.flags['contact'];\r\n\t\t\t\tdelete data.moveData.flags['protect'];\r\n\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tthis.actions.useMove(move, target, data.target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\t\tif (data.source.isActive) {\r\n\t\t\t\t\t\tthis.add('-anim', data.source, hitMove, data.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Clairvoyance\",\r\n\t\trating: 3,\r\n\t\tnum: -25,\r\n\t},\r\n\ttoxicdrain: {\r\n\t\tshortDesc: \"Removes Poison typing from adjacent Pokemon on switch-in. User gains +1 SpA for each Poison typing removed.\",\r\n\t\tdesc: \"Upon switch-in, the Poison typing is removed from all adjacent Pokemon. The user gains +1 SpA for each Poison typing removed.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target || target === pokemon) continue;\r\n\t\t\t\tif (target.hasType('Poison') && target.isAdjacent(this.effectState.target)) {\r\n\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Poison\" ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'), '[from] ability: Toxic Drain', '[of] ' + pokemon);\r\n\t\t\t\t\tthis.boost({spa: 1}, pokemon);\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Toxic Drain');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxic Drain\",\r\n\t\trating: 4,\r\n\t\tnum: -26,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}

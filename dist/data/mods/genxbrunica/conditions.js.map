{
  "version": 3,
  "sources": ["../../../../data/mods/genxbrunica/conditions.ts"],
  "sourcesContent": ["export const Conditions: {[k: string]: ConditionData} = {\r\n\tpar: {\r\n\t\tinherit: true,\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (!sourceEffect) {\r\n\t\t\t\tthis.add('-status', target, 'par');\r\n\t\t\t} else if (sourceEffect.id === 'thunderorb') {\r\n\t\t\t\t//TODO: Make the anim and message play concurrently?\r\n\t\t\t\tthis.add('-status', target, 'par', '[from] item: Thunder Orb', '[silent]');\r\n\t\t\t\tthis.add('-message', `${target.name} was paralyzed by the Thunder Orb!`);\r\n\t\t\t} else if (sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'par', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'par');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 1,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (this.randomChance(1, 4) && !(pokemon.hasAbility('quickfeet') && pokemon.hasItem('thunderorb'))) {\r\n\t\t\t\tthis.add('cant', pokemon, 'par');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t//There was an error so this edit to accommodate for Cloning Genes is being archived\r\n\t\r\n\ttwoturnmove: {\r\n\t\t// Cloning Genes\r\n\t\tinherit: true,\r\n\t\tonStart(attacker, defender, effect) {\r\n\t\t\t// (\"attacker\" is the Pokemon using the two turn move and the Pokemon this condition is being applied to)\r\n\t\t\tthis.effectState.move = effect.id;\r\n\t\t\tattacker.addVolatile(effect.id);\r\n\t\t\t// lastMoveTargetLoc is the location of the originally targeted slot before any redirection\r\n\t\t\t// note that this is not updated for moves called by other moves\r\n\t\t\t// i.e. if Dig is called by Metronome, lastMoveTargetLoc will still be the user's location\r\n\t\t\tlet moveTargetLoc: number = attacker.lastMoveTargetLoc!;\r\n\t\t\tif (effect.sourceEffect && this.dex.moves.get(effect.id).target !== 'self') {\r\n\t\t\t\t// this move was called by another move such as Metronome\r\n\t\t\t\t// and needs a random target to be determined this turn\r\n\t\t\t\t// it will already have one by now if there is any valid target\r\n\t\t\t\t// but if there isn't one we need to choose a random slot now\r\n\t\t\t\tif (defender.fainted) {\r\n\t\t\t\t\tdefender = this.sample(attacker.foes(true));\r\n\t\t\t\t}\r\n\t\t\t\tmoveTargetLoc = attacker.getLocOf(defender);\r\n\t\t\t}\r\n\t\t\tattacker.volatiles[effect.id].targetLoc = moveTargetLoc;\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tif (defender.hasAbility('cloninggenes')) {\r\n\t\t\t\tdefender.addVolatile('cloninggenes', defender);\r\n\t\t\t}\r\n\t\t\t// Run side-effects normally associated with hitting (e.g., Protean, Libero)\r\n\t\t\tthis.runEvent('PrepareHit', attacker, defender, effect);\r\n\t\t},\r\n\t},\r\n\ttypebalm: {\r\n\t\t//This is here to track whether a mon has used a Type Balm this switch-in\r\n\t\tduration: 0,\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tthis.add('-start', target, 'typechange', target.getTypes(false, true).join('/'), '[silent]');\r\n\t\t\tthis.add('-message', `${target.name} gained the ${target.addedType} type from the Type Balm!`);\r\n\t\t\tconst balmMoveList = {\r\n\t\t\t\t'Photalohm': 'Magnetic Updraft',\r\n\t\t\t\t'Smeltusk': 'Leaping Onrush',\r\n\t\t\t\t'Panthoard': 'Cupric Deluge',\r\n\t\t\t\t'Mustelone': 'Clone Express',\r\n\t\t\t\t'Froskua': 'Dive Bomb',\r\n\t\t\t\t'Muk': 'Mud Devourment',\r\n\t\t\t\t'Muk-Alola': 'Mud Devourment',\r\n\t\t\t\t'Syruptitious': 'Adulteration',\r\n\t\t\t\t'Steelix': 'Olive Rampage',\r\n\t\t\t\t'Crobat': 'Venomous Fang',\r\n\t\t\t\t'Saunusca': 'Tectonic Shift',\r\n\t\t\t\t'Raatilus': 'Ammolite Vortex',\r\n\t\t\t\t'Blootilus': 'Ammolite Vortex',\r\n\t\t\t\t'Yleltilus': 'Ammolite Vortex',\r\n\t\t\t\t'Acktilus': 'Ammolite Vortex',\r\n\t\t\t\t'Whitilus': 'Ammolite Vortex',\r\n\t\t\t\t'Dodrio': 'Asura Barrage',\r\n\t\t\t\t'Roserade': 'Vive Le\\u0301 Rose',\r\n\t\t\t\t'Bouffalant': 'Dread Stampede',\r\n\t\t\t\t'Pichat': 'Thunder Armor',\r\n\t\t\t\t'Pikachat': 'Thunder Armor',\r\n\t\t\t\t'Raichat': 'Thunder Armor',\r\n\t\t\t\t'Trippletop': 'Mystic Burst',\r\n\t\t\t\t'Violagarie': 'Violet Seed',\r\n\t\t\t\t'Yiseng': 'Mental Extract',\r\n\t\t\t\t'Garoupe': 'Discovery',\r\n\t\t\t\t'Frostabone': 'Shaking Tundra',\r\n\t\t\t\t'Moskitoski': 'Venom Drain',\r\n\t\t\t\t'Moskitoski-Swarm': 'Venom Drain',\r\n\t\t\t\t'Gastly': 'Maiden\\'s Peak',\r\n\t\t\t\t'Haunter': 'Maiden\\'s Peak',\r\n\t\t\t\t'Gengar': 'Maiden\\'s Peak',\r\n\t\t\t};\r\n\t\t\tconst species = target.baseSpecies.baseSpecies;\r\n\t\t\t//...All this to adjust the PP. \r\n\t\t\tif (balmMoveList[species]) {\r\n\t\t\t\tthis.effectState.balmMove = balmMoveList[species];\r\n\t\t\t\tthis.effectState.balmType = target.addedType;\r\n\t\t\t\tconst balmMove = this.dex.moves.get(this.effectState.balmMove);\r\n\t\t\t\tif (balmMove.type === target.addedType) {\r\n\t\t\t\t\tconst newMoveSlots = [];\r\n\t\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\t\tlet move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\t\tlet type = move.type;\r\n\t\t\t\t\t\tif (moveSlot.id === 'hiddenpower') {\r\n\t\t\t\t\t\t\ttype = target.hpType;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (type !== balmMove.type || \r\n\t\t\t\t\t\t\t(move.category !== balmMove.category && [move.category,balmMove.category].includes('Status'))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tnewMoveSlots.push(moveSlot);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst movepp = move.category === 'Status' ? 16 : 8;\r\n\t\t\t\t\t\t\t//I can't specify BP in these new moveslots D:\r\n\t\t\t\t\t\t\tnewMoveSlots.push({\r\n\t\t\t\t\t\t\t\tmove: moveSlot.move,\r\n\t\t\t\t\t\t\t\tid: moveSlot.id,\r\n\t\t\t\t\t\t\t\tpp: movepp,\r\n\t\t\t\t\t\t\t\tmaxpp: movepp,\r\n\t\t\t\t\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t\t\tvirtual: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget.moveSlots = newMoveSlots;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t//Priority's kinda janky so this should iron it out\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (!this.effectState.balmMove) return;\r\n\t\t\tconst balmMove = this.dex.moves.get(this.effectState.balmMove);\r\n\t\t\tif (move.type === balmMove.type && \r\n\t\t\t\t(move.category === balmMove.category || ![move.category,balmMove.category].includes('Status'))\r\n\t\t\t) {\r\n\t\t\t\treturn balmMove.priority;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tthunderarmorboost: {\r\n\t\tduration: 2,\r\n\t\tonBasePowerPriority: 6,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\tif (move.type === 'Electric' && move.category === 'Status') {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}

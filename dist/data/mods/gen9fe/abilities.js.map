{
  "version": 3,
  "sources": ["../../../../data/mods/gen9fe/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\t/* FEG9 abils */\r\n\tunfiltered: {\r\n\t\tshortDesc: \"Filter + Contrary + This Pokemon's NvE Moves deal 4/3x damage.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Unfiltered neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonChangeBoost(boost, target, source, effect) {\r\n\t\t\tif (effect?.id === 'zpower') return;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Unfiltered boost');\r\n\t\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Unfiltered\",\r\n    },\r\n\tquickstart: {\r\n\t\tshortDesc: \"On switch-in, this Pokemon's Attack and Speed are doubled for 5 turns.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('quickstart');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['quickstart'];\r\n\t\t\tthis.add('-end', pokemon, 'Quickstart', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Quickstart');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Quickstart');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Quickstart\",\r\n    },\r\n\tholygrail: {\r\n\t  shortDesc: \"Good As Gold + Levitate\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Holy Grail');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t  name: \"Holy Grail\",\r\n    },\r\n\talldevouring: {\r\n\t  shortDesc: \"Beast Boost + Run Away\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Move') {\r\n\t\t\t\tconst bestStat = source.getBestStat(true, true);\r\n\t\t\t\tthis.boost({[bestStat]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"All-Devouring\",\r\n    },\r\n\tgalvanicrelay: {\r\n\t  shortDesc: \"Mycelium Might + Transistor; Electric attacks also ignore abilities.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.debug('Galvanic Relay boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.debug('Galvanic Relay boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\treturn -0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === 'Status' || move.type === 'Electric') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Galvanic Relay\",\r\n    },\r\n\tforestfury: {\r\n\t  shortDesc: \"Intimidate + Hyper Cutter + Cannot be statused by opponents.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Forest Fury', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.atk && boost.atk < 0) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: Forest Fury\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Forest Fury');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Forest Fury');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Forest Fury\",\r\n    },\r\n\tgrowthspurt: {\r\n\t  shortDesc: \"Effects of Harvest; Berry is restored at 1/3 or less of its max HP.\",\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry && (this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2))) {\r\n\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Growth Spurt');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tconst threshold = target.maxhp / 3;\r\n\t\t\tif (target.hp <= threshold && target.hp + damage > threshold && !target.item && this.dex.items.get(target.lastItem).isBerry) {\r\n\t\t\t\t\ttarget.setItem(target.lastItem);\r\n\t\t\t\t\ttarget.lastItem = '';\r\n\t\t\t\t\tthis.add('-item', target, target.getItem(), '[from] ability: Growth Spurt');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Growth Spurt\",\r\n    },\r\n\tlightdrive: {\r\n\t  shortDesc: \"Light Metal + Quark Drive. Quark Drive activates if the user is lighter.\",\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('lightdrive');\r\n\t\t\t} else if (!pokemon.volatiles['lightdrive']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('lightdrive');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!(pokemon.volatiles['lightdrive']?.fromBooster || pokemon.volatiles['lightdrive']?.fromWeightDiff) && !this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.removeVolatile('lightdrive');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced || source === target) return;\r\n\t\t\tconst user = this.effectState.target;\r\n\t\t\tif (user.volatiles['lightdrive'] && !user.volatiles['lightdrive'].fromWeightDiff) return;\r\n\t\t\tvar yourweight;\r\n\t\t\tif (source === user) {\r\n\t\t\t\tyourweight = target.getWeight();\r\n\t\t\t} else if (target === user) {\r\n\t\t\t\tyourweight = source.getWeight();\r\n\t\t\t} else return;\r\n\t\t\tif (user.getWeight() < yourweight) {\r\n\t\t\t\tif (user.volatiles['lightdrive']) return;\r\n\t\t\t\tuser.addVolatile('lightdrive');\r\n\t\t\t\tuser.volatiles['lightdrive'].fromWeightDiff = true;\r\n\t\t\t} else if (user.volatiles['lightdrive']) {\r\n\t\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\t\tuser.volatiles['lightdrive'].fromWeightDiff = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuser.removeVolatile('lightdrive');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['lightdrive'];\r\n\t\t\tthis.add('-end', pokemon, 'Light Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Light Drive', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Light Drive');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Light Drive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Light Drive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Light Drive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Light Drive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Light Drive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Light Drive\",\r\n\t},\r\n\tscraprock: {\r\n\t  shortDesc: \"Scrappy + Solid Rock\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Scrap Rock neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\t//if ignoreImmunity does not exist replace with blank object\r\n\t\t\t//If it's not unconditional then populate Fighting and Normal fields\r\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name) && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Scrap Rock', '[of] ' + target);\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrap Rock', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Scrap Rock\",\r\n\t\trating: 3,\r\n\t},\r\n\treachless: {\r\n\t  shortDesc: \"Effects of Rock Head and Reckless.\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Reachless boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Reachless\",\r\n\t\trating: 3,\r\n\t},\r\n\topeningact: {\r\n\t  shortDesc: \"Protosynthesis + Prankster. Protosynthesis also activates when using a priority move.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tconst isItSunny = this.field.isWeather('sunnyday');\r\n\t\t\tif (move.priority > 0) {\r\n\t\t\t\tif (isItSunny || source.volatiles['openingact']) return;\r\n\t\t\t\tsource.addVolatile('openingact');\r\n\t\t\t\tsource.volatiles['openingact'].fromPriority = true;\r\n\t\t\t} else if (source.volatiles['openingact']?.fromPriority) {\r\n\t\t\t\tif (isItSunny) {\r\n\t\t\t\t\tsource.volatiles['openingact'].fromPriority = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.removeVolatile('openingact');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('openingact');\r\n\t\t\t} else if (!(pokemon.volatiles['openingact']?.fromBooster || pokemon.volatiles['openingact']?.fromPriority)) {\r\n\t\t\t\tpokemon.removeVolatile('openingact');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['openingact'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Opening Act', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Opening Act');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Opening Act atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Opening Act def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Opening Act spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Opening Act spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Opening Act spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Opening Act\",\r\n\t\trating: 3,\r\n\t},\r\n\tnecromancer: {\r\n\t  shortDesc: \"This Pokemon's offensive stat is multiplied by 1.5 while using a Ghost-type attack and takes 50% damage from Ghost and Steel attacks; can't be statused.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Necromancer boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Necromancer boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost' || move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Necromancer weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost' || move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Necromancer weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Necromancer');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Necromancer');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Necromancer\",\r\n\t\trating: 3,\r\n\t},\r\n\tregainpatience: {\r\n\t  shortDesc: \"Berserk + Regenerator\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tthis.effectState.checkedBerserk = !!(effect.effectType !== \"Move\" || effect.multihit || effect.negateSecondary\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|| (effect.hasSheerForce && source.hasAbility(['overwhelming','sheerforce','forceofnature','sandwrath'])));\r\n\t\t},\r\n\t\tonTryEatItem(item) {\r\n\t\t\tconst healingItems = [\r\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\r\n\t\t\t];\r\n\t\t\treturn (!healingItems.includes(item.id) || this.effectState.checkedBerserk);\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tthis.effectState.checkedBerserk = true;\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tconst threshold = target.maxhp*.5;\r\n\t\t\tif (target.hp <= threshold && target.hp + damage > threshold) {\r\n\t\t\t\tthis.boost({spa: 1}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Regain Patience\",\r\n\t\trating: 3,\r\n\t},\r\n\tquarksurge: {\r\n\t  shortDesc: \"Quark Drive + Electric Surge\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('quarksurge');\r\n\t\t\t} else if (!pokemon.volatiles['quarksurge']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('quarksurge');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['quarksurge'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Quark Surge', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Quark Surge');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Surge atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Surge def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Surge spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Surge spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Quark Surge spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Quark Surge\",\r\n\t\trating: 3,\r\n\t},\r\n\tonceuponatime: {\r\n\t  shortDesc: \"Protosynthesis + Infiltrator\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('onceuponatime');\r\n\t\t\t} else if (!pokemon.volatiles['onceuponatime']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('onceuponatime');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['onceuponatime'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Once Upon a Time', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Once Upon a Time');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Once Upon a Time atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Once Upon a Time def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Once Upon a Time spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Once Upon a Time spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Once Upon a Time spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Once Upon a Time\",\r\n\t\trating: 3,\r\n\t},\r\n\tprimitive: {\r\n\t  shortDesc: \"Protosynthesis + Oblivious\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (['attract','captivate','taunt'].includes(move.id)) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Primitive');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name) && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Primitive', '[of] ' + target);\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Primitive', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('primitive');\r\n\t\t\t} else if (!pokemon.volatiles['primitive']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('primitive');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Primitive');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['primitive'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Primitive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Primitive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Primitive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Primitive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Primitive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Primitive\",\r\n\t\trating: 3,\r\n\t},\r\n\tsystempurge: {\r\n\t  shortDesc: \"Hit by a Dark move or Booster Energy used: highest stat is 1.3x, or 1.5x if Speed.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Dark') {\r\n\t\t\t\ttarget.addVolatile('systempurge');\r\n\t\t\t}\r\n\t\t},\r\n\t\t/*onTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('systempurge');\r\n\t\t\t} else if (!pokemon.volatiles['systempurge']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('systempurge');\r\n\t\t\t}\r\n\t\t},*/\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['systempurge'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: System Purge', '[fromitem]');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} used its booster energy to activate a System Purge!`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: System Purge');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} activated a System Purge in response to the attack!`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('System Purge atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('System Purge def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('System Purge spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('System Purge spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('System Purge spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"System Purge\",\r\n\t\trating: 3,\r\n\t},\r\n\tdelayedreaction: {\r\n\t  shortDesc: \"This Pokemon switches out at the end of the next turn after being lowered to 50% of its max HP.\",\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp*.5 && target.hp + damage > target.maxhp*.5) {\r\n\t\t\t\ttarget.addVolatile('delayedreaction');\r\n\t\t\t\tthis.add('-ability', target, 'Delayed Reaction');\r\n\t\t\t\tthis.add('-message', `${target.name} is getting ready to leave the battlefield!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Delayed Reaction');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} ejected itself from the battle!`);\r\n\t\t\t\tpokemon.switchFlag = true;\t\t\t\t\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Delayed Reaction\",\r\n\t\trating: 1,\r\n\t},\r\n\tmadcow: {\r\n\t  shortDesc: \"On switch-in, or when this Pokemon is lowered to 50% max HP, the foe's Attack is lowered by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Mad Cow', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', target, 'ability: Mad Cow');\r\n\t\t\tfor (const pokemon of target.adjacentFoes()) {\r\n\t\t\t\tif (pokemon.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', pokemon);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, pokemon, target, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget.switchFlag = false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mad Cow\",\r\n\t\trating: 3.5,\r\n\t},\r\n\tchoreography: {\r\n\t  shortDesc: \"Protean + Dancer; Dancer is once per switch-in instead of Protean.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced || move.isFutureMove || move.sourceEffect === 'snatch') return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type && source.setType(type)) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Choreography');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.choreography;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Choreography\",\r\n\t\trating: 4,\r\n\t},\r\n\tsquall: {\r\n\t  shortDesc: \"+1 Atk if hit by a Fire or Ice move or Tailwind begins; Fire & Ice immunity.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Ice' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Squall');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.boost({atk: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySideConditionStart(target, source, sideCondition) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (sideCondition.id === 'tailwind') {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Squall\",\r\n\t\trating: 4,\r\n\t},\r\n\tstoneage: {\r\n\t  shortDesc: \"Sturdy + Technician\",\r\n\t\tonBeforeMovePriority: 9,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (pokemon.species.name !== 'Relishadow' || pokemon.transformed) return;\r\n\t\t\tpokemon.formeChange('Relishadow-Zenith');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Stone Age');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Stone Age');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Stone Age boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Stone Age\",\r\n\t\trating: 3,\r\n\t},\r\n\tstonewheel: {\r\n\t  shortDesc: \"Rock Head + Technician\",\r\n\t\tonBeforeMovePriority: 9,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (pokemon.species.name !== 'Relishadow' || pokemon.transformed) return;\r\n\t\t\tpokemon.formeChange('Relishadow-Zenith');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Stone Age boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stone Wheel\",\r\n\t\trating: 3,\r\n\t},\r\n\tmoltencore: {\r\n\t  shortDesc: \"Turboblaze + Rock Head\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Molten Core');\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Molten Core\",\r\n\t\trating: 3,\r\n\t},\r\n\teczema: {\r\n\t  shortDesc: \"Unaware + Rough Skin\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon) {\r\n\t\t\t\tif (pokemon !== this.activeTarget) return;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\telse if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Eczema\",\r\n\t\trating: 3,\r\n\t},\r\n\taurashield: {\r\n\t  shortDesc: \"Shield Dust + While this Pokemon is active, moves with secondary effects used by any Pokemon have 1.33x power.\",\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Aura Shield prevent secondary');\r\n\t\t\treturn secondaries.filter(effect => !!(effect.self || effect.dustproof));\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Aura Shield');\r\n\t\t},\r\n\t\tonAnyBasePowerPriority: 20,\r\n\t\tonAnyBasePower(basePower, source, target, move) {\r\n\t\t\tif (target === source || move.category === 'Status' || !move.secondaries) return;\r\n\t\t\tif (!move.auraBooster) move.auraBooster = this.effectState.target;\r\n\t\t\telse if (move.auraBooster !== this.effectState.target) return;\r\n\t\t\treturn this.chainModify([move.hasAuraBreak ? 0x0C00 : 0x1547, 0x1000]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Aura Shield\",\r\n\t\trating: 3,\r\n\t},\r\n\tfaultyphoton: {\r\n\t  shortDesc: \"Disguise + Quark Drive\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Move' && target.species.id === 'ironmimic' && !target.transformed) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Faulty Photon');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, source, move) {\r\n\t\t\tif (!target/*) return;\r\n\t\t\tif (*/|| target.species.id !== 'ironmimic' || target.transformed || !target.runImmunity(move.type)) return;\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates/* && this.gen >= 6*/);\r\n\t\t\tif (hitSub) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target/*) return;\r\n\t\t\tif (*/|| target.species.id !== 'ironmimic' || target.transformed || !target.runImmunity(move.type)) return;\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates/* && this.gen >= 6*/);\r\n\t\t\tif (hitSub) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.species.id === 'ironmimic' && this.effectState.busted) {\r\n\t\t\t\t//const speciesid = /*pokemon.species.id === 'mimikyutotem' ? 'Mimikyu-Busted-Totem' :*/ 'Iron Mimic-Busted';\r\n\t\t\t\t//pokemon.formeChange(speciesid, this.effect, true);\r\n\t\t\t\tpokemon.formeChange('Iron Mimic-Busted', this.effect, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get('Iron Mimic-Busted'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('faultyphoton');\r\n\t\t\t} else if (!pokemon.volatiles['faultyphoton']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('faultyphoton');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Faulty Photon', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Faulty Photon');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Faulty Photon atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Faulty Photon def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Faulty Photon spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Faulty Photon spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Faulty Photon spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {\r\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\r\n\t\t\tbreakable: 1, notransform: 1,\r\n\t\t},\t\r\n\t\tname: \"Faulty Photon\",\r\n\t\trating: 3,\r\n\t},\r\n\tdyschronometria: {\r\n\t  shortDesc: \"While this Pokemon is active, all Paradox boosts are suppressed.\",\r\n\t\tonAnyModifyAtkPriority: 4,\r\n\t\tonAnyModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['faultyphoton', 'systempurge', 'onceuponatime', 'primitive', 'quarksurge', \r\n\t\t\t\t\t\t\t\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall', \r\n\t\t\t\t\t\t\t\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\r\n\t\t\t\t\tif (attacker.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (attacker?.volatiles[paradox]?.bestStat !== 'atk') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyDefPriority: 5,\r\n\t\tonAnyModifyDef(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['faultyphoton', 'systempurge', 'onceuponatime', 'primitive', 'quarksurge', \r\n\t\t\t\t\t\t\t\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall',\r\n\t\t\t\t\t\t\t\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\r\n\t\t\t\t\tif (defender.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (defender?.volatiles[paradox]?.bestStat !== 'def') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifySpAPriority: 4,\r\n\t\tonAnyModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['faultyphoton', 'systempurge', 'onceuponatime', 'primitive', 'quarksurge', \r\n\t\t\t\t\t\t\t\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall', \r\n\t\t\t\t\t\t\t\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\r\n\t\t\t\t\tif (attacker.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (attacker?.volatiles[paradox]?.bestStat !== 'spa') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifySpDPriority: 5,\r\n\t\tonAnyModifySpD(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['faultyphoton', 'systempurge', 'onceuponatime', 'primitive', 'quarksurge', \r\n\t\t\t\t\t\t\t\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall', \r\n\t\t\t\t\t\t\t\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\r\n\t\t\t\t\tif (defender.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (defender?.volatiles[paradox]?.bestStat !== 'spd') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\t//Speed suppression in the other Paradox abilities\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Dyschronometria');\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.effectState.unnerved) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Dyschronometria');\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tthis.effectState.unnerved = false;\r\n\t\t},\r\n\t\tflags: {breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Dyschronometria\",\r\n\t\trating: 3,\r\n\t},\r\n\t\r\n\tfirewall: {\r\n\t  shortDesc: \"Quark Drive + x1.5 power to Fire-type moves when active\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.volatiles['firewall']) {\r\n\t\t\t\tthis.debug('Firewall Fire boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.volatiles['firewall']) {\r\n\t\t\t\tthis.debug('Firewall Fire boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('firewall');\r\n\t\t\t} else if (!pokemon.volatiles['firewall']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('firewall');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['firewall'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Firewall', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Firewall');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Firewall atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Firewall def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Firewall spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Firewall spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Firewall spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Firewall\",\r\n\t\trating: 3,\r\n\t},\r\n\tnanorepairs: {\r\n\t  shortDesc: \"Quark Drive + Regenerator\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('nanorepairs');\r\n\t\t\t} else if (!pokemon.volatiles['nanorepairs']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('nanorepairs');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['nanorepairs'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Nanorepairs', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Nanorepairs');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Nanorepairs atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Nanorepairs def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Nanorepairs spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Nanorepairs spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Nanorepairs spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Nanorepairs\",\r\n\t\trating: 3,\r\n\t},\r\n\tironsights: {\r\n\t\tshortDesc: \"x1.33 Atk/SpA/Acc.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa) {\r\n\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tthis.debug('ironsights - enhancing accuracy');\r\n\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Iron Sights\",\r\n\t\trating: 3,\r\n\t},\r\n\trejuvenate: {\r\n\t  shortDesc: \"On switch-out: If no status then heal 1/3 Max HP, else heal status\",\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1/*) return;\r\n\t\t\tif (*/|| pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Rejuvenate already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Cure\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Pressures') && !Object.values(species.abilities).includes('Rejuvenate')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Rejuvenate\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Cure\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility(['naturalcure','rejuvenate','naturalpressures'])) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Rejuvenate (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Rejuvenate (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Cure.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (!pokemon.status) {\r\n\t\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\r\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Rejuvenate');\r\n\t\t\tpokemon.setStatus('');\r\n\t\t\t// only reset .showCure if it's false\r\n\t\t\t// (once you know a Pokemon has Natural Cure, its cures are always known)\r\n\t\t\tpokemon.showCure ||= undefined;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rejuvenate\",\r\n\t\trating: 3,\r\n\t},\r\n\telectromagneticveil: {\r\n\t  shortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Electric moves or burned; Electric & Burn immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp/4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Electromagnetic Veil');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status && !this.heal(target.baseMaxhp/4)) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Electromagnetic Veil');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Electromagnetic Veil');\r\n\t\t\t\tthis.heal(target.baseMaxhp/4);\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Electromagnetic Veil\",\r\n\t\trating: 3,\r\n\t},\r\n\trisingtension: {\r\n\t  shortDesc: \"Levitate + Cursed Body\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.volatiles['disable']/*) return;\r\n\t\t\tif (*/ && !move.isFutureMove/*) {\r\n\t\t\t\tif (*/&& this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t//}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Rising Tension\",\r\n\t\trating: 3,\r\n\t},\r\n\tgrindset: {\r\n\t  shortDesc: \"While active, own Attack is 1.5x, other Pokemon's Attack is 0.5.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Grindset');\r\n\t\t\tthis.add('-message', `The grind never stops for ${pokemon.name}, lowering the foe's Attack and raising its own!`);\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonAnyModifyAtk(atk, source, target, move) {\r\n\t\t\tif (source.hasAbility('Grindset')) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\r\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\r\n\t\t\tthis.debug('Grindset Atk drop');\r\n\t\t\treturn this.chainModify(0.5);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Grindset\",\r\n\t\trating: 3,\r\n\t},\r\n\tshockfactor: {\r\n\t  shortDesc: \"Static + Intimidate\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Shock Factor', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shock Factor\",\r\n\t\trating: 3,\r\n\t},\r\n\tshellshock: {\r\n\t  shortDesc: \"Effects of Rock Head. Moves with Recoil have a 30% chance of inflicting paralysis.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !(move.recoil || move.hasCrashDamage) || move.target === 'self') return;\r\n\t\t\t(move.secondaries ||= []).push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'par',\r\n\t\t\t\tability: this.dex.abilities.get('shellshock'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shell Shock\",\r\n\t\trating: 3,\r\n\t},\r\n\tcircuitbreaker: {\r\n\t  shortDesc: \"Quark Drive + Mold Breaker\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t\tif (!this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Circuit Breaker');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} breaks the circuit!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('circuitbreaker');\r\n\t\t\t} else if (!pokemon.volatiles['circuitbreaker']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('circuitbreaker');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['circuitbreaker'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Circuit Breaker', '[fromitem]');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} used its Booster Energy to break the circuit harder!`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Circuit Breaker');\r\n\t\t\t\t\tthis.add('-message', `The Electric Terrain lets ${pokemon.name} break the circuit harder!`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Circuit Breaker atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Circuit Breaker def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Circuit Breaker spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Circuit Breaker spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Circuit Breaker spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Circuit Breaker\",\r\n\t\trating: 3,\r\n\t},\r\n\tweightoflife: {\r\n\t  shortDesc: \"Heavy Metal + Protosynthesis. Protosynthesis activates if the user is heavier.\",\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('weightoflife');\r\n\t\t\t} else if (!pokemon.volatiles['weightoflife']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('weightoflife');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!(pokemon.volatiles['weightoflife']?.fromBooster || pokemon.volatiles['weightoflife']?.fromWeightDiff) && !this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.removeVolatile('weightoflife');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced || source === target) return;\r\n\t\t\tconst user = this.effectState.target;\r\n\t\t\tif (user.volatiles['weightoflife'] && !user.volatiles['weightoflife'].fromWeightDiff) return;\r\n\t\t\tvar yourweight;\r\n\t\t\tif (source === user) {\r\n\t\t\t\tyourweight = target.getWeight();\r\n\t\t\t} else if (target === user) {\r\n\t\t\t\tyourweight = source.getWeight();\r\n\t\t\t} else return;\r\n\t\t\t\r\n\t\t\tif (user.getWeight() > yourweight) {\r\n\t\t\t\tif (user.volatiles['weightoflife']) return;\r\n\t\t\t\tuser.addVolatile('weightoflife');\r\n\t\t\t\tuser.volatiles['weightoflife'].fromWeightDiff = true;\r\n\t\t\t} else if (user.volatiles['weightoflife']) {\r\n\t\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\t\tuser.volatiles['weightoflife'].fromWeightDiff = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuser.removeVolatile('weightoflife');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['weightoflife'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Weight of Life', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Weight of Life');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Weight of Life atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Weight of Life def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Weight of Life spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Weight of Life spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Weight of Life spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Weight of Life\",\r\n\t\trating: 1,\r\n\t\tnum: 135,\r\n\t},\r\n\trebelsblade: {\r\n\t  shortDesc: \"This Pokemon's slicing moves have x1.5 power and a 30% chance to inflict poisoning.\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.debug('Rebels Blade boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.flags['slicing'] || move.target === 'self') return;\r\n\t\t\t(move.secondaries ||= []).push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'psn',\r\n\t\t\t\tability: this.dex.abilities.get('rebelsblade'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rebel's Blade\",\r\n\t\trating: 3,\r\n\t},\r\n\tnaturalpressures: {\r\n\t  shortDesc: \"Natural Cure + Pressure\",\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Pressures activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Pressures switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1/*) return;\r\n\t\t\tif (*/|| pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Pressures already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Pressures\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Pressures') && !Object.values(species.abilities).includes('Rejuvenate')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Pressures\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Pressures\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility(['naturalpressures','naturalcure','rejuvenate'])) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Pressures (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Pressures (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Cure.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (!pokemon.status) return;\r\n\r\n\t\t\t// if pokemon.showCure is undefined, it was skipped because its ability\r\n\t\t\t// is known\r\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\r\n\r\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Natural Pressures');\r\n\t\t\tpokemon.setStatus('');\r\n\r\n\t\t\t// only reset .showCure if it's false\r\n\t\t\t// (once you know a Pokemon has Natural Pressures, its cures are always known)\r\n\t\t\tpokemon.showCure ||= undefined;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Natural Pressures');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Natural Pressures\",\r\n\t\trating: 3,\r\n\t},\r\n\tvitalmetalbody: {\r\n\t  shortDesc: \"Vital Spirit + Full Metal Body\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vital Metal Body');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Metal Body');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Vital Metal Body\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Metal Body');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vital Metal Body\",\r\n\t\trating: 3,\r\n\t},\r\n\tfortunomorphosis: {\r\n\t  shortDesc: \"This Pokemon gains the Laser Focus effect when it takes a hit from an attack.\",\r\n\t  onDamagingHitOrder: 1,\r\n\t  onDamagingHit(damage, target, source, move) {\r\n\t\t\ttarget.addVolatile('laserfocus');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fortunomorphosis\",\r\n\t\trating: 3,\r\n\t},\r\n\tburningpetals: {\r\n\t  shortDesc: \"This side's Fire-types can't have stats lowered or status inflicted by other Pokemon and this Pokemon can't be damaged by Fire-type moves; x1.5 power to own Fire-type moves if either is attempted.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.addVolatile('burningpetals')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Burning Petals');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source) || !target.hasType('Fire')) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) this.add('-block', target, 'ability: Burning Petals', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (source && target !== source && effect && effect.id !== 'yawn' && target.hasType('Fire')) {\r\n\t\t\t\tthis.debug('interrupting setStatus with Burning Petals');\r\n\t\t\t\tif (effect.name === 'Synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) this.add('-block', target, 'ability: Burning Petals', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && target.hasType('Fire')) {\r\n\t\t\t\tthis.debug('Burning Petals blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) this.add('-block', target, 'ability: Burning Petals', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('burningpetals');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Burning Petals');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('burningpetals')) {\r\n\t\t\t\t\tthis.debug('Burning Petals boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('burningpetals')) {\r\n\t\t\t\t\tthis.debug('Burning Petals boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Burning Petals', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Burning Petals\",\r\n\t\trating: 3,\r\n\t},\r\n\tsnowblind: {\r\n\t  shortDesc: \"Snow Warning + Unseen Fist\",\r\n\t   onStart(source) {\r\n\t\t\tthis.field.setWeather('snow');\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Snowblind\",\r\n\t\trating: 3,\r\n\t},\r\n\tunvital: {\r\n\t  shortDesc: \"Unaware + Vital Spirit\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon) {\r\n\t\t\t\tif (pokemon !== this.activeTarget) return;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\telse if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Unvital');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Unvital');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Unvital');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Unvital\",\r\n\t\trating: 3,\r\n\t},\r\n\townluck: {\r\n\t  shortDesc: \"This Pokemon has a +1 crit ratio and is immune to Intimidate and derivatives thereof.\",\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name) && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Own Luck', '[of] ' + target);\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Own Luck', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Own Luck\",\r\n\t\trating: 3,\r\n\t},\r\n\tarmourlock: {\r\n\t  shortDesc: \"This Pokemon can neither be critted nor have its item removed.\",\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Armour Lock');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Armour Lock\",\r\n\t\trating: 3,\r\n\t},\r\n\tglacialfocus: {\r\n\t  shortDesc: \"This Pokemon can't be flinched or have its Evasion lowered.\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.evasion && boost.evasion < 0) {\r\n\t\t\t\tdelete boost.evasion;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Glacial Focus\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Glacial Focus\",\r\n\t\trating: 3,\r\n\t},\r\n\tslushie: {\r\n\t  shortDesc: \"Mold Breaker + Slush Rush\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Slushie');\r\n\t\t\tthis.add('-message', `${pokemon.name} is drinking a slushie!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['hail', 'snow'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Slushie\",\r\n\t\trating: 3,\r\n\t},\r\n\tsandwrath: {\r\n\t  shortDesc: \"Sand Stream + Sheer Force\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sand Wrath\",\r\n\t\trating: 3,\r\n\t},\r\n\tpondweed: {\r\n\t  shortDesc: \"Grass/Water immunity, +1 Attack if hit by either\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && ['Grass','Water'].includes(move.type)) {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Pondweed');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (source === this.effectState.target || !target.isAlly(source)) return;\r\n\t\t\tif (move.type === 'Grass' || move.type === 'Water') {\r\n\t\t\t\tthis.boost({atk: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Pondweed\",\r\n\t\trating: 3,\r\n\t},\r\n\twetskin: {\r\n\t  shortDesc: \"Hydration + Torrent\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Wet Skin boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Wet Skin boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status && ['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('wetskin');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Wet Skin');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wet Skin\",\r\n\t\trating: 3,\r\n\t},\r\n\tfriskexchange: {\r\n\t  shortDesc: \"Frisk + Thermal Exchange\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted || !target.item) continue;\r\n\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Frisk Exchange', '[of] ' + pokemon, '[identify]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Frisk Exchange');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Frisk Exchange');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Frisk Exchange\",\r\n\t\trating: 3,\r\n\t},\r\n\tfreeflight: {\r\n\t  shortDesc: \"Libero + Levitate\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (this.effectState.libero/*) return;\r\n\t\t\tif (*/|| move.hasBounced || move.isFutureMove || move.sourceEffect === 'snatch') return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type && source.setType(type)) {\r\n\t\t\t\tthis.effectState.libero = true;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Free Flight');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn() {\r\n\t\t\tdelete this.effectState.libero;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Free Flight\",\r\n\t\trating: 3,\r\n\t},\r\n\tpillage: {\r\n\t\tname: \"Pillage\",\r\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.foes().some(\r\n\t\t\t\tfoeActive => foeActive && foeActive.isAdjacent(pokemon) && foeActive.ability === 'noability'\r\n\t\t\t) || pokemon.species.id !== 'zoinkazenta') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || !this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.foes().filter(foeActive => foeActive && !foeActive.getAbility().flags['notrace']\r\n\t\t\t\t&& !foeActive.getAbility().flags['failskillswap'] && foeActive.isAdjacent(pokemon));\r\n\t\t\tif (!possibleTargets.length) return;\r\n\t\t\tconst rand = (possibleTargets.length > 1) ? this.random(possibleTargets.length) : 0;\r\n\t\t\tconst target = possibleTargets[rand];\r\n\t\t\tconst pillageAbil = pokemon.getAbility();\r\n\t\t\tconst ability = target.getAbility();\r\n\t\t\tif (!this.runEvent('SetAbility', target, pokemon, this.effect, pillageAbil)\r\n\t\t\t   || !this.runEvent('SetAbility', pokemon, pokemon, this.effect, ability)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Pillage');\r\n\t\t\tthis.add('-activate', pokemon, 'move: Skill Swap', ability, pillageAbil, '[of] ' + target);\r\n\t\t\tthis.singleEvent('End', pillageAbil, pillageAbil.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('End', ability, ability.abilityState, target);\r\n\t\t\tpokemon.ability = ability.id\r\n\t\t\tpokemon.abilityState = {id: this.toID(pokemon.ability), target: pokemon};\r\n\t\t\ttarget.ability = pillageAbil.id;\r\n\t\t\ttarget.abilityState = {id: this.toID(pillageAbil.id), target: target};\r\n\t\t\tthis.singleEvent('Start', ability, pokemon.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('Start', pillageAbil, target.abilityState, target);\r\n\t\t\t\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noentrain: 1, notrace: 1},\r\n\t\trating: 5,\r\n\t},\r\n\tfatfingers: {\r\n\t  shortDesc: \"Long Reach + Thick Fat\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Fingers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Fingers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Fat Fingers\",\r\n\t\trating: 3,\r\n\t},\r\n\thourglass: {\r\n\t  shortDesc: \"Mirror Armor + Sand Rush\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\t// Don't bounce self stat changes, or boosts that have already bounced\r\n\t\t\tif (!source || target === source || !boost || effect.name === 'Hourglass') return;\r\n\t\t\tlet b: BoostID;\r\n\t\t\tfor (b in boost) {\r\n\t\t\t\tif (boost[b]! < 0 && target.boosts[b] > -6) {\r\n\t\t\t\t\tconst negativeBoost: SparseBoostsTable = {};\r\n\t\t\t\t\tnegativeBoost[b] = boost[b];\r\n\t\t\t\t\tdelete boost[b];\r\n\t\t\t\t\tif (source.hp) {\r\n\t\t\t\t\t\tthis.add('-ability', target, 'Hourglass');\r\n\t\t\t\t\t\tthis.boost(negativeBoost, source, target, null, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Hourglass\",\r\n\t\trating: 3,\r\n\t},\r\n\tfieldday: {\r\n\t  shortDesc: \"If Grassy Terrain is active, this Pokemon's Speed is doubled.\",\r\n\t\tonModifySpe(spe) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Field Day\",\r\n\t\trating: 3,\r\n\t},\r\n\tforceofnature: {\r\n\t  shortDesc: \"Grassy Surge + Sheer Force.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Force of Nature\",\r\n\t},\r\n\tairbornearmor: {\r\n\t\tshortDesc: \"Prism Armor + Levitate\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Airborne Armor neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Airborne Armor\",\r\n\t\trating: 3,\r\n\t},\r\n\tbleedingedge: {\r\n\t  shortDesc: \"Mold Breaker + Technician\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Bleeding Edge');\r\n\t\t\tthis.add('-message', `${pokemon.name} breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Bleeding Edge boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bleeding Edge\",\r\n\t\trating: 3,\r\n\t},\r\n\tancientmarble: {\r\n\t  shortDesc: \"Protosynthesis + Sharpness\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.debug('Ancient Marble boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('ancientmarble');\r\n\t\t\t} else if (!pokemon.volatiles['ancientmarble']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('ancientmarble');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['ancientmarble'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Ancient Marble', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Ancient Marble');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Marble atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Marble def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Marble spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Marble spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Ancient Marble spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Ancient Marble\",\r\n\t\trating: 3,\r\n\t},\r\n\tspongeofruin: {\r\n\t  shortDesc: \"Beads of Ruin + Water Absorb\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Sponge of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Sponge of Ruin weakened the Sp. Def of all surrounding Pok\u00E9mon!`);\r\n\t\t},\r\n\t\tonAnyModifySpD(spd, target, source, move) {\r\n\t\t\tif (target.hasAbility(['Sponge of Ruin', 'Beads of Ruin'])) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (!move.ruinedSpD?.hasAbility(['Sponge of Ruin', 'Beads of Ruin'])) move.ruinedSpD = abilityHolder;\r\n\t\t\telse if (move.ruinedSpD !== abilityHolder) return;\r\n\t\t\tthis.debug('Sponge of Ruin SpD drop');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Sponge of Ruin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Sponge of Ruin\",\r\n\t\trating: 3,\r\n\t},\r\n\toverwhelming: {\r\n\t  shortDesc: \"Magic Guard + Sheer Force\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Overwhelming\",\r\n\t\trating: 3,\r\n\t},\r\n\tprehistorichunter: {\r\n\t  shortDesc: \"Protosynthesis + Gulp Missile; Activating one also activates the other\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.hp || !source.isActive || target.transformed || target.isSemiInvulnerable()) return;\r\n\t\t\tif (['screamcormorantgulping', 'screamcormorantgorging'].includes(target.species.id)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\tif (target.species.id === 'screamcormorantgulping') {\r\n\t\t\t\t\tthis.boost({def: -1}, source, target, null, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.trySetStatus('par', target, move);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.formeChange('screamcormorant', move);\r\n\t\t\t\tdelete target.volatiles['prehistorichunter'];\r\n\t\t\t}\r\n\t\t},\r\n\t\t// The Dive part of this mechanic is implemented in Dive's `onTryMove` in moves.ts\r\n\t\tonSourceTryPrimaryHit(target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect?.id === 'surf' && source.hasAbility('prehistorichunter') &&\r\n\t\t\t\tsource.species.name === 'Scream Cormorant' && !source.transformed\r\n\t\t\t) {\r\n\t\t\t\tconst forme = source.hp <= source.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\r\n\t\t\t\tsource.formeChange(forme, effect);\r\n\t\t\t\tsource.addVolatile('prehistorichunter');\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\t// if (pokemon.transformed) return;\r\n\t\t\tconst forme = pokemon.hp <= pokemon.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('prehistorichunter');\r\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\r\n\t\t\t} else if (!pokemon.volatiles['prehistorichunter']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('prehistorichunter');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['prehistorichunter'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tconst forme = pokemon.hp <= pokemon.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Prehistoric Hunter', '[fromitem]');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} used its Booster Energy to locate nearby prey!`);\r\n\t\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Prehistoric Hunter');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Prehistoric Hunter atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Prehistoric Hunter def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Prehistoric Hunter spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Prehistoric Hunter spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Prehistoric Hunter spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1},\r\n\t\tname: \"Prehistoric Hunter\",\r\n\t\trating: 3,\r\n\t},\r\n\tlawnmowerofruin: {\r\n\t   shortDesc: \"Sap Sipper + Vessel of Ruin\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Lawnmower of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Lawnmower of Ruin weakened the Sp. Atk of all surrounding Pok\u00E9mon!`);\r\n\t\t},\r\n\t\tonAnyModifySpA(spa, source, target, move) {\r\n\t\t\tif (source.hasAbility(['Lawnmower of Ruin', 'Vessel of Ruin'])) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (!move.ruinedSpA) move.ruinedSpA = abilityHolder;\r\n\t\t\telse if (move.ruinedSpA !== abilityHolder) return;\r\n\t\t\tthis.debug('Lawnmower of Ruin SpA drop');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Grass') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Lawnmower of Ruin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (source === this.effectState.target || !target.isAlly(source) || move.type !== 'Grass') return;\r\n\t\t\tthis.boost({atk: 1}, this.effectState.target);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Lawnmower of Ruin\",\r\n\t},\r\n\tbarbedchain: {\r\n\t   shortDesc: \"This Pokemon\u2019s contact moves do an additional 1/8 of the target\u2019s max HP in damage.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak') || !target.hp || !this.checkMoveMakesContact(move, target, source)) return; \r\n\t\t\tthis.damage(target.baseMaxhp / 8, target, source)\r\n\t\t},\r\n\t\tname: \"Barbed Chain\",\r\n\t},\r\n\tsteamyscales: {\r\n\t   shortDesc: \"Steam Engine + Multiscale\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (['Water', 'Fire'].includes(move.type)) {\r\n\t\t\t\tthis.boost({spe: 6});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Steamy Scales weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Steamy Scales\",\r\n\t},\r\n\tmarvelsteam: {\r\n\t   shortDesc: \"When hit by a damaging Water or Fire-type move, +6 to Def and Spe.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (['Water', 'Fire'].includes(move.type)) {\r\n\t\t\t\tthis.boost({def: 6, spe: 6});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Marvel Steam\",\r\n\t},\r\n\thellkite: {\r\n\t   shortDesc: \"Levitate effects + 1.5x power to Dragon and Ground moves.\",\r\n\t\t//floatation under scripts.ts\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (['Dragon','Ground'].includes(move.type)) {\r\n\t\t\t\tthis.debug('Hellkite boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (['Dragon','Ground'].includes(move.type)) {\r\n\t\t\t\tthis.debug('Hellkite boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Hellkite\",\r\n\t},\r\n\tfeistytempo: {\r\n\t\tshortDesc: \"Guts + Own Tempo\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.status) {\r\n\t\t\t\t//Burn attack cut being ignored is in scripts.ts/actions\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Feisty Tempo');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Feisty Tempo');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name) && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Feisty Tempo', '[of] ' + target);\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Feisty Tempo', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Feisty Tempo\",\r\n\t},\r\n\twellbakedflameorb: {\r\n\t\tshortDesc: \"Guts + Well-Baked Body\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.status) {\r\n\t\t\t\t//Burn attack cut being ignored is in scripts.ts/actions\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tif (!this.boost({def: 2})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Well-Baked Body');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Well-Baked Flame Orb\",\r\n\t},\r\n\thoneymoon: {\r\n\t\tshortDesc: \"Levitate + Honey Gather\",\r\n\t\t// airborneness implemented in scripts.ts\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Honey Moon\",\r\n\t},\r\n\taircontrol: {\r\n\t\tshortDesc: \"Levitate + Mind's Eye\",\r\n\t\t// airborneness implemented in scripts.ts\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Air Control\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Air Control\",\r\n\t},\r\n\tlivelylocks: {\r\n\t\tshortDesc: \"Copies opponent's stat changes to Speed on switch-in\",\r\n\t\tonStart(pokemon) {\r\n\t\t\t//Currently because Costar bypasses sub Lively Locks too will bypass sub \r\n\t\t\t\r\n\t\t\t//let activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!target.boosts.spe) continue;\r\n\t\t\t//\tif (!activated) {\r\n\t\t\t//\t\tthis.add('-ability', pokemon, 'Lively Locks', 'boost');\r\n\t\t\t//\t\tactivated = true;\r\n\t\t\t//\t}\r\n\t\t\t//\tif (target.volatiles['substitute']) {\r\n\t\t\t//\t\tthis.add('-immune', target);\r\n\t\t\t//\t} else {\r\n\t\t\t\t\tthis.boost({spe: target.boosts.spe}, pokemon);\r\n\t\t\t\t\treturn;\r\n\t\t\t//\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Lively Locks\",\r\n\t},\r\n\tangrybird: {\r\n\t\tshortDesc: \"Defiant + Competitive\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Angry Bird only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({atk: 2, spa: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Angry Bird\",\r\n\t},\r\n\tsharpgoggles: {\r\n\t\tshortDesc: \"Tinted Lens + Competitive\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Tinted Lens boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Sharp Goggles/Competitive only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sharp Goggles\",\r\n\t},\r\n\twinterstorm: {\r\n\t\tshortDesc: \"Under snow, heal 6.25% of own max HP and damage opponents for 12.5% of their max HP at end of turn.\",\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (effect.id === 'snow' || effect.id === 'hail') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t\tfor (const pokemon of target.foes()) {\r\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'hail') return false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Winter Storm\",\r\n\t},\r\n\tfishythreat: {\r\n\t  shortDesc: \"On switch-in, inflict -2 Speed to opponents.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Fishy Threat', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -2}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fishy Threat\",\r\n\t\trating: 3.5,\r\n\t},\r\n\theatproofdrive: {\r\n\t  shortDesc: \"Heatproof + Quark Drive\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof Drive Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof Drive SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('heatproofdrive');\r\n\t\t\t} else if (!pokemon.volatiles['heatproofdrive']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('heatproofdrive');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['heatproofdrive'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Heatproof Drive', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Heatproof Drive');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Quark Drive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Heatproof Drive\",\r\n\t\trating: 4,\r\n\t},\r\n\tarmorfist: {\r\n\t\tshortDesc: \"x1.2 power to punch and priority moves (stacking); Own side is protected from the sort\",\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst armorTailHolder = this.effectState.target;\r\n\t\t\tif ((source.isAlly(armorTailHolder) || move.target === 'all') && (move.priority > 0.1 || move.flags['punch'])) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', armorTailHolder, 'ability: Armor Fist', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch'] || move.priority > 0.1) {\r\n\t\t\t\tthis.debug('Armor Fist boost');\r\n\t\t\t\treturn this.chainModify([(move.priority > 0.1 && move.flags['punch']) ? 5898 : 4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Armor Fist\",\r\n\t},\r\n\tmercurypulse: {\r\n\t\tshortDesc: \"On switch-in, summons Rain Dance. During Rain Dance, Attack is 1.3333x.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.setWeather('raindance')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'Mercury Pulse', '[source]');\r\n\t\t\t} else if (this.field.isWeather('raindance')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mercury Pulse');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Mercury boost');\r\n\t\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mercury Pulse\",\r\n\t\trating: 4.5,\r\n\t},\r\n\tfiredrinker: {\r\n\t\tshortDesc: \"Sap Sipper + Blaze. Sap Sipper also activates against Fire-type moves.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && ['Fire','Grass'].includes(move.type)) {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Fire Drinker');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (source === this.effectState.target || !target.isAlly(source)) return;\r\n\t\t\tif (['Fire','Grass'].includes(move.type)) {\r\n\t\t\t\tthis.boost({atk: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Fire Drinker boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Fire Drinker boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Fire Drinker\",\r\n\t},\r\n\tminddomain: {\r\n\t\tshortDesc: \"Competitive + Psychic Surge. Competitive also summons Psychic Terrain.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Mind Domain/Competitive only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mind Domain\",\r\n\t\trating: 4,\r\n\t},\r\n\tforcedfencer: {\r\n\t\tshortDesc: \"Pressure + Stance Change\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Forced Fencer');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.isAlly(source)) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Deoxyslash-Speed' || attacker.transformed) return;\r\n\t\t\tlet targetForme;\r\n\t\t\tif (move.id === 'kingsshield') {\r\n\t\t\t\ttargetForme = 'Deoxyslash-Speed';\r\n\t\t\t} else if (move.category !== 'Status') {\r\n\t\t\t\ttargetForme = 'Deoxyslash-Speed-Blade';\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Forced Fencer\",\r\n\t\trating: 4,\r\n\t},\r\n\t//Introduced with FEUU\r\n\tstormclinic: {\r\n\t  shortDesc: \"Regenerator + Wind Rider\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.flags['wind']) {\r\n\t\t\t\tif (!this.boost({atk: 1}, target, target)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Wind Rider');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySideConditionStart(target, source, sideCondition) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (sideCondition.id === 'tailwind') {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Storm Clinic\",\r\n\t},\r\n\tultraface: {\r\n\t\tshortDesc: \"Eisephalon: Change to No Face form on KO; Reverts in Snow\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move' && source.species.id === 'eisephalon') {\r\n\t\t\t\tsource.formeChange('Eisephalon-No-Face', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon, source, sourceEffect) {\r\n\t\t\t// snow/hail resuming because Cloud Nine/Air Lock ended does not trigger Ice Face\r\n\t\t\tif ((sourceEffect as Ability)?.suppressWeather || !pokemon.hp) return;\r\n\t\t\tif (this.field.isWeather(['hail', 'snow']) && pokemon.species.id === 'eisephalonnoface') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ultra Face');\r\n\t\t\t\tpokemon.formeChange('Eisephalon', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {\r\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\r\n\t\t\tnotransform: 1,\r\n\t\t},\r\n\t\tname: \"Ultra Face\",\r\n\t\trating: 3.5,\r\n\t\tnum: 224,\r\n\t},\r\n\temperorsclothes: {\r\n\t\tshortDesc: \"Deal 10% bonus damage for each hit taken (up to 50%)\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet attacked = pokemon.timesAttacked;\r\n\t\t\tif (attacked > 0) {\r\n\t\t\t\tthis.effectState.fallen = attacked > 5 ? 5 : attacked;\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t\t} else {\r\n\t\t\t\tthis.effectState.fallen = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.effectState.fallen >= 5) return;\r\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle') {\r\n\t\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\t\tthis.add('-end', target, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.fallen++;\r\n\t\t\t\tthis.add('-activate', target, 'ability: Emperor\\'s Clothes');\r\n\t\t\t\tthis.add('-start', target, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\tconst powMod = [4096, 4506, 4915, 5325, 5734, 6144];\r\n\t\t\t\tthis.debug(`Supreme Overlord boost: ${powMod[this.effectState.fallen]}/4096`);\r\n\t\t\t\treturn this.chainModify([powMod[this.effectState.fallen], 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Emperor's Clothes\",\r\n\t},\r\n\tinnermood: {\r\n\t\tshortDesc: \"Inner Focus + Moody\",\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tlet stats: BoostID[] = [];\r\n\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\tlet statPlus: BoostID;\r\n\t\t\tfor (statPlus in pokemon.boosts) {\r\n\t\t\t\tif (statPlus === 'accuracy' || statPlus === 'evasion') continue;\r\n\t\t\t\tif (pokemon.boosts[statPlus] < 6) {\r\n\t\t\t\t\tstats.push(statPlus);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet randomStat: BoostID | undefined = stats.length ? this.sample(stats) : undefined;\r\n\t\t\tif (randomStat) boost[randomStat] = 2;\r\n\r\n\t\t\tstats = [];\r\n\t\t\tlet statMinus: BoostID;\r\n\t\t\tfor (statMinus in pokemon.boosts) {\r\n\t\t\t\tif (statMinus === 'accuracy' || statMinus === 'evasion') continue;\r\n\t\t\t\tif (pokemon.boosts[statMinus] > -6 && statMinus !== randomStat) {\r\n\t\t\t\t\tstats.push(statMinus);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trandomStat = stats.length ? this.sample(stats) : undefined;\r\n\t\t\tif (randomStat) boost[randomStat] = -1;\r\n\r\n\t\t\tthis.boost(boost, pokemon, pokemon);\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name)) {\r\n\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Inner Mood', '[of] ' + target);\r\n\t\t\t\t}\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Inner Mood', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Inner Mood\",\r\n\t},\r\n\tnononsense: {\r\n\t\tshortDesc: \"Battle Armor + Clear Body\",\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: No Nonsense\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"No Nonsense\",\r\n\t},\r\n\tmagneticstorm: {\r\n\t\tshortDesc: \"Magnet Pull + Storm Drain\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Steel') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Steel')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Magnetic Storm');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Water' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Magnetic Storm');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magnetic Storm\",\r\n\t},\r\n\tultraimpulse: {\r\n\t\tshortDesc: \"x1.5 to highest stat when burned; +1 upon landing a KO\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.effectState.bestStat = pokemon.getBestStat(true, true);\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst bestStat = this.effectState.bestStat;\r\n\t\t\tif (['atk','spa'].includes(bestStat) && attacker.status === 'brn'\r\n\t\t\t\t&& move.category === (bestStat === 'spa' ? 'Special' : 'Physical')) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'def' && pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'spd' && pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'spe' && pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({[this.effectState.bestStat]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Impulse\",\r\n\t},\r\n\tdauntingstorm: {\r\n\t\tshortDesc: \"Water Absorb + Intimidate\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Daunting Storm', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Water Absorb');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Daunting Storm\",\r\n\t},\r\n\tmagnetize: {\r\n\t\tshortDesc: \"Galvanize + Levitate\",\r\n\t\t//levitate's airborneness in scripts.ts/pokemon#IsGrounded()\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !(noModifyType.includes(move.id) || (move.isZ && move.category !== 'Status') || (move.name === 'Tera Blast' && pokemon.terastallized))) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magnetize\",\r\n\t},\r\n\tmagneticforce: {\r\n\t\tshortDesc: \"Galvanize effects + Traps Electric-types.\",\r\n\t\t//levitate's airborneness in scripts.ts/pokemon#IsGrounded()\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Electric') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Electric')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !(noModifyType.includes(move.id) || (move.isZ && move.category !== 'Status') || (move.name === 'Tera Blast' && pokemon.terastallized))) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magnetic Force\",\r\n\t},\r\n\thydrotechnic: {\r\n\t\tshortDesc: \"Moves with <=60BP have x1.5 power and restore 6.25% of Max HP after use.\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\t///uhhh let's hope this typeChangerBoosted hack works\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source && move.typeChangerBoosted === this.effect)\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16, source, source);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hydrotechnic\",\r\n\t},\r\n\tshearstrength: {\r\n\t\tshortDesc: \"Takes x0.75 damage from moves with secondaries.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('Shear Strength neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shear Strength\",\r\n\t},\r\n\tsuppressivefire: {\r\n\t\tshortDesc: \"Flash Fire + Filter\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Filter neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\ttarget.addVolatile('suppressivefire');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('suppressivefire');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Suppressive Fire');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('suppressivefire')) {\r\n\t\t\t\t\tthis.debug('Flash Fire boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('suppressivefire')) {\r\n\t\t\t\t\tthis.debug('Flash Fire boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Suppressive Fire', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Suppressive Fire\",\r\n\t},\r\n\tinnovate: {\r\n\t  shortDesc: \"Scrappy + Quark Drive.\",\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name)) {\r\n\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Innovate', '[of] ' + target);\r\n\t\t\t\t}\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Innovate', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('innovate');\r\n\t\t\t} else if (!pokemon.volatiles['innovate']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('innovate');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['innovate'];\r\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Innovate', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Innovate');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Quark Drive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Innovate\",\r\n\t\trating: 4,\r\n\t},\r\n\tnumbskull: {\r\n\t  shortDesc: \"Unaware + Rock Head\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon) {\r\n\t\t\t\tif (pokemon !== this.activeTarget) return;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\telse if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Numbskull\",\r\n\t\trating: 3,\r\n\t},\r\n\tappleofruin: {\r\n\t  shortDesc: \"Pokemon without this ability have their evasion multiplied by 0.75x.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Apple of Ruin');\r\n\t\t},\r\n\t\tonAnyModifyAccuracyPriority: -1,\r\n\t\tonAnyModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (target.hasAbility('Apple of Ruin')) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (!move.ruinedEva) move.ruinedEva = abilityHolder;\r\n\t\t\telse if (move.ruinedEva !== abilityHolder) return;\r\n\t\t\tthis.debug('Apple of Ruin Evasion drop');\r\n\t\t\treturn this.chainModify([5448, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Apple of Ruin\",\r\n\t\trating: 4,\r\n\t},\r\n\tbestboost: {\r\n\t  shortDesc: \"This Pokemon's highest stat can't be lowered and raises 1 stage after KOing a foe.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.effectState.bestStat = pokemon.getBestStat(true, true);\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({[this.effectState.bestStat]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tconst bestStat = (this.effectState.bestStat ||= target.getBestStat(true, true));\r\n\t\t\tif (boost[bestStat] && boost[bestStat]! < 0) {\r\n\t\t\t\tdelete boost[bestStat];\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", bestStat, \"[from] ability: Best Boost\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Best Boost\",\r\n\t\trating: 3.5,\r\n\t},\r\n\trogue: {\r\n\t  shortDesc: \"Competitive + Overcoat\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Competitive/Rogue only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (['sandstorm','hail','powder'].includes(type)) return false;\r\n\t\t},\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.flags['powder'] && target !== source && this.dex.getImmunity('powder', target)) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rogue');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Rogue\",\r\n\t},\r\n\tunidentifiedflyingobject: {\r\n\t\t//airborneness in scripts.ts#pokemon\r\n\t\tshortDesc: \"Levitate effects. If this Pokemon would be hit by a Ground move, the attacker becomes confused.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\t//target should be airborne\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.volatiles['confusion'] && !(\r\n\t\t\t\tmove.ignoreImmunity && (move.ignoreImmunity === true || move.ignoreImmunity['Ground'])\r\n\t\t\t) && target.isGrounded() === null) {\r\n\t\t\t\tsource.addVolatile('confusion', target);\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Unidentified Flying Object\",\r\n\t},\r\n\troughimage: {\r\n\t\tshortDesc: \"Illusion effects. Breaking the illusion damages the attacker for 12.5% of Max HP.\",\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t\t// yes, you can Illusion an active pokemon but only if it's to your right\r\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\r\n\t\t\t\tif (!possibleTarget.fainted) {\r\n\t\t\t\t\t// If Ogerpon is in the last slot while the Illusion Pokemon is Terastallized\r\n\t\t\t\t\t// Illusion will not disguise as anything\r\n\t\t\t\t\tif (!pokemon.terastallized || possibleTarget.species.baseSpecies !== 'Hattepon') {\r\n\t\t\t\t\t\tpokemon.illusion = possibleTarget;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.illusion) {\r\n\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Rough Image'), target.abilityState, target, source, move);\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tthis.debug('illusion cleared');\r\n\t\t\t\tpokemon.illusion = null;\r\n\t\t\t\tconst details = pokemon.species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\r\n\t\t\t\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\r\n\t\t\t\tthis.add('replace', pokemon, details);\r\n\t\t\t\tthis.add('-end', pokemon, 'Illusion');\r\n\t\t\t\tif (this.ruleTable.has('illusionlevelmod')) {\r\n\t\t\t\t\tthis.hint(\"Illusion Level Mod is active, so this Pok\\u00e9mon's true level was hidden.\", true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Rough Image\",\r\n\t},\r\n\triotpayload: {\r\n\t\tshortDesc: \"Rocky Payload + Defiant\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Defiant/Riot Payload only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({atk: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Rock') {\r\n\t\t\t\tthis.debug('Riot Payload boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Rock') {\r\n\t\t\t\tthis.debug('Riot Payload boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Riot Payload\",\r\n\t},\r\n\ttoxicattitude: {\r\n\t\tshortDesc: \"Intimidate + Poison Point\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Toxic Attitude', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target) && this.randomChance(3, 10)) {\r\n\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Toxic Attitude\",\r\n\t},\r\n\tquickwit: {\r\n\t\tshortDesc: \"Speed Boost + Keen Eye\",\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Quick Wit\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Quick Wit\",\r\n\t},\r\n\tstonesofruin: {\r\n\t\tshortDesc: \"Pokemon without this ability have x0.75 Attack and deal x0.75 with super-effective hits.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Stones of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Stones of Ruin weakened the Attack of all surrounding Pok\u00E9mon and the power of their super-effective moves!`);\r\n\t\t},\r\n\t\tonAnyModifyAtk(atk, source, target, move) {\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (source.hasAbility(['Tablets of Ruin','Stones of Ruin'])) return;\r\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\r\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\r\n\t\t\tthis.debug('Tablets of Ruin Atk drop');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (source.hasAbility('Stones of Ruin') || target.getMoveHitData(move).typeMod <= 0) return;\r\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\r\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\r\n\t\t\tthis.debug('Stones of Ruin neutralize');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stones of Ruin\",\r\n\t},\r\n\tunstoppable: {\r\n\t\tshortDesc: \"Adaptability + Aroma Veil\",\r\n\t\tonModifySTAB(stab, source, target, move) {\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\treturn stab === 2 ? 2.25 : 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\r\n\t\t\tif (['attract', 'disable', 'encore', 'healblock', 'taunt', 'torment'].includes(status.id)) {\r\n\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Aroma Veil', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Unstoppable\",\r\n\t},\r\n\tsaltedlobster: {\r\n\t\tshortDesc: \"Adaptability + Purifying Salt\",\r\n\t\tonModifySTAB(stab, source, target, move) {\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\treturn stab === 2 ? 2.25 : 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salted Lobster');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salted Lobster');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Purifying Salt weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Purifying Salt weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Salted Lobster\",\r\n\t},\r\n\t//Vanilla abilities\r\n\t//Extending Inner Focus's Intimidate immunity to derivatives\r\n\tinnerfocus: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['Intimidate','Mad Cow','Forest Fury','Shock Factor','Daunting Storm','Toxic Attitude'].includes(effect.name)) {\r\n\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t}\r\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tembodyaspectcornerstone: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Cornerstone-Tera' && !this.effectState.embodied) {\r\n\t\t\t\tthis.effectState.embodied = true;\r\n\t\t\t\tthis.boost({def: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tembodyaspecthearthflame: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Hearthflame-Tera' && !this.effectState.embodied) {\r\n\t\t\t\tthis.effectState.embodied = true;\r\n\t\t\t\tthis.boost({atk: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tembodyaspectteal: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Teal-Tera' && !this.effectState.embodied) {\r\n\t\t\t\tthis.effectState.embodied = true;\r\n\t\t\t\tthis.boost({spe: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tembodyaspectwellspring: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Wellspring-Tera' && !this.effectState.embodied) {\r\n\t\t\t\tthis.effectState.embodied = true;\r\n\t\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tnaturalcure: {\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1/*) return;\r\n\t\t\tif (*/|| pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Cure already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Cure\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Pressures') && !Object.values(species.abilities).includes('Rejuvenate')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Cure\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Cure\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility(['naturalcure','rejuvenate','naturalpressures'])) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Cure.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinherit: true,\r\n\t},\r\n\t//Mainly did this so we could try to see if Quark Drive would work\r\n\tprotosynthesis: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Protosynthesis', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Protosynthesis');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Protosynthesis spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Protosynthesis\",\r\n\t\trating: 3,\r\n\t\tnum: 281,\r\n\t},\r\n\tquarkdrive: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Quark Drive', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Quark Drive');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Quark Drive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\r\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Quark Drive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target"]
}

{
  "version": 3,
  "sources": ["../../../../data/mods/maadowr/abilities.ts"],
  "sourcesContent": ["export const Abilities: { [abilityid: string]: ModdedAbilityData } = {\r\n  absorption: {\r\n\t  shortDesc: \"Increases user's base Def or SpD in terrain.\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain') || this.field.isTerrain('electricterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t   onModifySpDPriority: 6,\r\n\t\tonModifySpD(pokemon) {\r\n\t\t\tif (this.field.isTerrain('acidicterrain') || this.field.isTerrain('mistyterrain') || this.field.isTerrain('psychicterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Absorption\",\r\n\t\trating: 2,\r\n\t\tnum: -1,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tacidicsurge: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Acidic Terrain for 5 turns. During the effect, the power of Poison-type attacks made by grounded Pok\u00E9mon is multiplied by 1.3, and grounded Steel-types are not immune to Poison-type damage. Steel-type Pok\u00E9mon are still immune to being poisoned and badly poisoned, except by Pok\u00E9mon with Corrosion. Camouflage transforms the user into a Poison-type, Nature Power becomes Sludge Bomb, and Secret Power has a 30% chance to cause poison. Lasts for 8 turns if the user is holding a Terrain Extender (such as through Skill Swap).\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Poison power, Steel not immune to Poison type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Acidic Surge\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tmimicry: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tlet types;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\ttypes = ['Electric'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\ttypes = ['Grass'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\t\ttypes = ['Fairy'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\ttypes = ['Psychic'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidicterrain':\r\n\t\t\t\ttypes = ['Poison'];\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault:\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t}\r\n\t\t\tconst oldTypes = pokemon.getTypes();\r\n\t\t\tif (oldTypes.join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\tif (this.field.terrain || pokemon.transformed) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'), '[from] ability: Mimicry');\r\n\t\t\t\tif (!this.field.terrain) this.hint(\"Transform Mimicry changes you to your original un-transformed types.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mimicry');\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mimicry\",\r\n\t\trating: 0,\r\n\t\tnum: 250,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tagitation: {\r\n\t\tdesc: \"When this Pok\u00E9mon raises or lowers another Pok\u00E9mon's stat stages, the effect is increased by one stage for each affected stat.\",\r\n\t\tshortDesc: \"Increases stat stage changes the Pok\u00E9mon inflicts by 1 stage.\",\r\n\t\tonAnyTryBoost(boost, target, source, effect) {\r\n\t\t\t// Prevent the effect if it's a Z-Power move\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\r\n\t\t\t// Ensure that the target and source are valid and not the same\r\n\t\t\tif (!target || !source || target === source || source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Iterate through the boost object to modify stat changes\r\n\t\t\tfor (const stat in boost) {\r\n\t\t\t\t// Type assertion to ensure stat is a key of BoostsTable\r\n\t\t\t\tconst boostValue = boost[stat as keyof BoostsTable];\r\n\t\t\t\tif (boostValue !== undefined) {\r\n\t\t\t\t\tif (boostValue < 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue - 1; // Exacerbate debuffs\r\n\t\t\t\t\t} else if (boostValue > 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue + 1; // Augment buffs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Agitation\",\r\n\t\trating: 4,\r\n\t\tnum: -3,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n   ampup: {\r\n\t\tdesc: \"When this Pok\u00E9mon's move misses, raises its Speed by 2 stages.\",\r\n\t\tshortDesc: \"Raises user's Speed by 2 stages if its move misses.\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.moveThisTurnResult === false) {\r\n\t\t\t\tthis.boost({spe: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Amp Up\",\r\n\t   rating: 2,\r\n\t   num: -4,\r\n\t},\r\n\t// end\r\n\r\n\t// start: Currently doesn't affect the user of Perish Song. Perhaps, I misunderstood how Perish Song actually targets...\r\n   buzz: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Sound move, the target(s) will be inflicted with a Torment effect.\",\r\n\t\tshortDesc: \"Inflicts Torment effect if the Pok\u00E9mon uses a Sound move.\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\t// Check if the move is a Sound move\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\t// Handle moves that affect all Pok\u00E9mon on the field\r\n\t\t\t\tif (move.target === 'all' || move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tif (pokemon && !pokemon.hasAbility('soundproof') && !pokemon.volatiles['torment']) { // removed \"&& pokemon !== source\" to see what happens\r\n\t\t\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t\t\t\tthis.add('-start', pokemon, 'Torment', '[from] ability: Buzz');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (target && !target.hasAbility('soundproof') && !target.volatiles['torment']) {\r\n\t\t\t\t\t\t// If the move targets a single Pok\u00E9mon\r\n\t\t\t\t\t\ttarget.addVolatile('torment');\r\n\t\t\t\t\t\tthis.add('-start', target, 'Torment', '[from] ability: Buzz');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t    name: \"Buzz\",\r\n\t\trating: 3,\r\n\t\tnum: -5,\r\n\t},\t\t\r\n\t// end\r\n\r\n\t// start\r\n   chainlink: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon steals its partner's Steel type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tif (!pokemon.hasType('Steel')) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\t\tif (ally.hasAbility('chainlink')) continue; // don't bounce back and forth indefinitely\r\n\t\t\t\t\tif (ally.hasType('Steel') && pokemon.addType('Steel')) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} stole its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Ability: Chain Link');\r\n\t\t\t\t\t\tally.addVolatile('chainlink');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.hasType('Steel')) return;\r\n\t\t\t// doesn't happen twice if the ally has already returned the armor\r\n\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\tally.removeVolatile('chainlink');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) { // it seems like volatiles may not run onEnd on their own the way Abilities do\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) { // revert Chain Link user's type first\r\n\t\t\t\t\tif (ally.hasAbility('chainlink') && ally.hasType('Steel')) {\r\n\t\t\t\t\t\tlet types = ally.baseSpecies.types;\r\n\t\t\t\t\t\tif (ally.getTypes().join() === types.join() || !ally.setType(types)) return;\r\n\t\t\t\t\t\tthis.add('-ability', ally, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${ally.name} returned its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', ally, 'typechange', ally.types.join('/'));\r\n\t\t\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\t\t\tif (pokemon.getTypes().join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chain Link\",\r\n\t\trating: 3,\r\n\t\tnum: -6,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcoupdegrass: {\r\n\t\tdesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less of its maximum HP, rounded down. Does not affect moves that have multiple targets.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less HP.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\tif (!action) return;\r\n\t\t\tconst target = this.getTarget(action.pokemon, action.move, action.targetLoc);\r\n\t\t\tif (!target) return;\r\n\t\t\t// Check if the target's HP is at or below half\r\n\t\t\tif (target.hp <= Math.floor(target.maxhp / 2)) {\r\n\t\t\t\t// Check if the move is not a spread move\r\n\t\t\t\tif (action.move.target !== 'allAdjacent' && action.move.target !== 'all') {\r\n\t\t\t\t\tpokemon.addVolatile('coupdegrass');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\t\tif (action) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Coup de Grass');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} prepared to move immediately!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority) {\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coup de Grass\",\r\n\t\trating: 3,\r\n\t\tnum: -7,\r\n\t},\r\n\t// end\r\n\r\n\t// start: currently, only heals user rather than ally as well\r\n\tcultivation: {\r\n\t\tshortDesc: \"User recovers 1/16 of its HP, 1/8 in terrain.\",\r\n\t\tonTerrainChange(target, source) {\r\n\t\t\t// Check if any relevant terrain is active\r\n\t\t\tif (this.field.isTerrain('electricterrain') || \r\n\t\t\t\tthis.field.isTerrain('grassyterrain') || \r\n\t\t\t\tthis.field.isTerrain('mistyterrain') || \r\n\t\t\t\tthis.field.isTerrain('psychicterrain') || \r\n\t\t\t\tthis.field.isTerrain('acidicterrain')) {\r\n\t\t\t\t\r\n\t\t\t\t// Heal the user by 1/16 of its max HP\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t\t\r\n\t\t\t\t// Heal the ally by 1/16 of their max HP\r\n\t\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\t\tif (ally && ally.hp > 0) { // Check if the ally is alive\r\n\t\t\t\t\t\tthis.heal(ally.baseMaxhp / 16);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cultivation\",\r\n\t\trating: 2,\r\n\t\tnum: -8,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tgraviton: {\r\n\t\tshortDesc: \"On switch-in, this Pok\u00E9mon summons Gravity.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Graviton\",\r\n\t\trating: 4,\r\n\t\tnum: -9,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tillwind: {\r\n\t\tshortDesc: \"Sets Tailwind when user replaces a fainted ally.\",\r\n\t\t//onAfterMega(pokemon) {\r\n\t\t//\tif (!pokemon.side.faintedLastTurn) return;\r\n\t\t//\tthis.field.addPseudoWeather('tailwind');\r\n\t  // },\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n       \t\tthis.add('-sidestart', pokemon.side, 'move: Tailwind');\r\n    \t},\r\n\t\tflags: {},\r\n\t\tname: \"Ill Wind\",\r\n\t\trating: 5,\r\n\t\tnum: -10,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tinoculum: {\r\n\t\tname: \"Inoculum\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Fire') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction from Fire-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing damage from the Fire-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction for burn damage');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing burn damage!`);\r\n\t\t\t\t\treturn damage / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\t\r\n\t\tflags: {},\r\n\t\trating: 2,\r\n\t\tnum: -11,\r\n\t},\r\n\t\r\n\t// end\r\n\r\n\t// start\r\n\tinterference: {\r\n\t\tshortDesc: \"If user gets hurt by a contact move, inflicts Torment on the attacker.\",\r\n   \t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tsource.addVolatile('torment', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Interference\",\r\n\t\trating: 3,\r\n\t\tnum: -12,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start: Malware\r\n\tmalware: {\r\n\t\tname: \"Malware\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Malware');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Malware is active!`);\r\n\t\t\tthis.effectState.malwareUser = pokemon;\r\n\t\t\tthis.eachEvent('Update');\r\n\t\t},\r\n\t\tonAnyDragOut(pokemon) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned');\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon === this.effectState.malwareUser) {\r\n\t\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\t\tif (target !== pokemon && !target.hasType('Poison') && !target.hasType('Steel') && !target.status) {\r\n\t\t\t\t\t\t// Check for immunity to poison\r\n\t\t\t\t\t\tif (target.isGrounded() && this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Misty Terrain!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasAbility('immunity')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name}'s Immunity prevents it from being poisoned!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Safeguard!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasItem('sunring') && (target.baseSpecies.baseSpecies === 'Horizonoc')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Sun Ring!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Check if the ally is Horizonoc and Sun or Desolate Land is active\r\n\t\t\t\t\t\tconst allyPresent = target.side.active.some(ally => ally && ally !== target && ally.baseSpecies.baseSpecies === 'Horizonoc' && ally.hasItem('sunring'));\r\n\t\t\t\t\t\tif (allyPresent && ['sunnyday', 'desolateland'].includes(this.field.effectiveWeather())) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected from being poisoned because its ally Horizonoc is present with Sun Ring and the weather is active!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.add('-message', `${target.name} is affected by Malware!`);\r\n\t\t\t\t\t\ttarget.setStatus('psn', pokemon, null, true);\r\n\t\t\t\t\t\ttarget.addVolatile('malwarepoisoned');\r\n\t\t\t\t\t//\tthis.add('-start', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); //this is internal check\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t//\tonResidualOrder: 26,\r\n\t//\tonResidualSubOrder: 1,\r\n\t//\tonResidual(pokemon) {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\t// Remove all Malware poison effects when the user switches out\r\n\t\tfor (const target of this.getAllActive()) {\r\n\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// This method handles when any Pok\u00E9mon switches out\r\n\t\tonAnySwitchOut(pokemon) {\r\n\t\t// Check if the switching Pok\u00E9mon has the malwarepoisoned status\r\n\t\tif (pokemon.volatiles['malwarepoisoned']) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned'); // Remove the malwarepoisoned volatile status\r\n\t\t\tif (pokemon.status === 'psn') {\r\n\t\t\t\tpokemon.cureStatus(); // Cure the poison status if it exists\r\n\t\t\t\t}\r\n\t\t\t//\tthis.add('-end', pokemon, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is cured of Malware poison.`);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonFaint(pokemon) {\r\n\t\t// Remove all Malware poison effects when the user faints\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n//\t\tonDamage(damage, target, source, effect) {\r\n//\t\t\tif (effect && effect.id === 'psn' && (target.volatiles['malwarepoisoned'])) {\r\n//\t\t\t\treturn damage / 2;\r\n//\t\t\t}\r\n//\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\trating: 4,\r\n\t\tnum: -13,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start\r\n\tmasquerade: {\r\n\t\tdesc: \"This Pok\u00E9mon inherits the Ability of the last unfainted Pokemon in its party until it takes direct damage from another Pok\u00E9mon's attack. Abilities that cannot be copied are \\\"No Ability\\\", As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, and Zen Mode.\",\r\n\t\tshortDesc: \"Inherits the Ability of the last party member. Wears off when attacked.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || pokemon.volatiles['masquerade']) return;\r\n\t\t\tpokemon.addVolatile('masquerade');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (!pokemon.side.pokemon[i]) continue;\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hugepower', 'hungerswitch', 'illusion', 'imposter', 'neutralizinggas',\r\n\t\t\t\t\t'powerofalchemy', 'purepower', 'receiver', 'trace', 'wonderguard',\r\n\t\t\t\t];\r\n\t\t\t\tif (\r\n\t\t\t\t\tpokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\t(pokemon.side.pokemon[i].getAbility() as any).isPermanent || additionalBannedAbilities.includes(pokemon.side.pokemon[i].ability)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i] || pokemon === pokemon.side.pokemon[i]) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst masquerade = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\tpokemon.setAbility(masquerade.ability);\r\n\t\t\tthis.hint(`${pokemon.name} inherited ${this.dex.abilities.get(pokemon.ability).name} from ${masquerade.name}!`);\r\n\t\t\tthis.add('-ability', pokemon, this.dex.abilities.get(pokemon.ability).name, '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.hasAbility('masquerade')) return;\r\n\t\t\t\tif (this.effectState.busted) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name}'s Masquerade wore off!`);\r\n\t\t\t\t\tpokemon.setAbility('masquerade');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Masquerade\",\r\n\t\trating: 3,\r\n\t\tnum: -14,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpermafrost: {\r\n\t\tshortDesc: \"Boosts Ice moves by 50% on user's side.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Permafrost boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Permafrost\",\r\n\t\trating: 3.5,\r\n\t\tnum: -15,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpoisonspit: {\r\n\t\tshortDesc: \"Sets Acidic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Spit\",\r\n\t\trating: 2,\r\n\t\tnum: -16,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\treconfiguration: {\r\n\t\tshortDesc: \"Boosts user's stat depending on target's best stat.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst foes = pokemon.side.foe.active;\r\n\t\t\tconst target = foes[foes.length - 1 - pokemon.position];\r\n\t\t\tif (!target) return;\r\n\t\t\tthis.boost({[target.getBestStat(false,true)]: 1});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Reconfiguration\",\r\n\t\trating: 3,\r\n\t\tnum: -17,\r\n\t},\r\n\t// end\r\n\r\n\t// start: \r\n\trewind: {\r\n\t\tshortDesc: \"Recovers items on user's side if at 50% or below.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t// Check if the target's HP is brought to 50% or below after damage is applied\r\n\t\t\tif (target.hp - damage <= target.maxhp / 2) {\r\n\t\t\t\tthis.effectState.rewindTriggered = true; // Mark that the ability has been triggered\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\t// Check if the ability was triggered\r\n\t\t\tif (this.effectState.rewindTriggered) {\r\n\t\t\t\tthis.effectState.rewindTriggered = false; // Reset the trigger\r\n\t\t\t\t// Recover items from all Pok\u00E9mon on the user's side that don't already have an item\r\n\t\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\t\tif (ally && !ally.item) { // Only recover items for allies without items\r\n\t\t\t\t\t\t// Use Recycle to recover the item\r\n\t\t\t\t\t\tthis.actions.useMove('Recycle', ally);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rewind\",\r\n\t\trating: 4,\r\n\t\tnum: -18,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tscaleshift: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon copies its partner's first type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tlet newtype = null;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tally !== pokemon && !ally.hasAbility('scaleshift') && ally.types[0] !== pokemon.baseSpecies.types[0] &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[1]\r\n\t\t\t\t) {\r\n\t\t\t\t\tnewtype = ally.types[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newtype) {\r\n\t\t\t\tconst typecombo = [newtype, pokemon.baseSpecies.types[1]];\r\n\t\t\t\tif (pokemon.getTypes().join() === typecombo.join() || !pokemon.setType(typecombo)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Scale Shift\",\r\n\t\trating: 3,\r\n\t\tnum: -19,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsolarcore: {\r\n\t\tshortDesc: \"During intense sunlight, this Pok\u00E9mon can skip the charging turn of its moves.\",\r\n\t\tonChargeMove(pokemon, target, move) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Solar Core - remove charge turn for ' + move.id);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\treturn false; // skip charge turn\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Solar Core\",\r\n\t\trating: 2,\r\n\t\tnum: -20,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsteelbreaker: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacks are critical hits if the target is a Steel-type Pok\u00E9mon.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.hasType('Steel')) return 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Steelbreaker\",\r\n\t\trating: 3,\r\n\t\tnum: -21,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ttempestuous: {\r\n\t\tdesc: \"When replacing a fainted party member, this Pok\u00E9mon's Special Defense is boosted, and it charges power to double the power of its Electric-type move on its first turn.\",\r\n\t\tshortDesc: \"Gains the effect of Charge when replacing a fainted ally.\",\r\n\t//\tonAfterMega(pokemon) {\r\n\t//\t\tif (!pokemon.side.faintedLastTurn) return;\r\n\t//\t\tthis.boost({spd: 1}, pokemon);\r\n\t//\t\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t//\t\tpokemon.addVolatile('charge');\r\n\t//\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\t// Check if Charge is already active\r\n\t\t\tif (!pokemon.volatiles['charge']) {\r\n\t\t\t//\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\t\tpokemon.addVolatile('charge'); // Apply Charge effect\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tempestuous\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\t// thermal expansion\r\n\tthermalexpansion: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (effect && effect.id === 'stealthrock') {\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (move.type === 'Rock') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Thermal Expansion');\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (target.hasType('Ice')) return;\r\n\t\t\tif (!target.addType('Ice')) return false;\r\n\t\t\tif (effect.id === 'snow') {\r\n\t\t\t\tthis.add('-start', target, 'typeadd', 'Ice', '[from] ability: Thermal Expansion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Thermal Expansion\",\r\n\t\tshortDesc: \"If user is Ice-type, immunity to Stealth Rock and Rock-type moves. On immunity, lose Ice-type. Regain in Snow or switch.\",\r\n\t\trating: 4,\r\n\t\tnum: -23,\r\n\t},\r\n\r\n\t// end\r\n\r\n\t// start\r\n\tvampirism: {\r\n\t\tshortDesc: \"Replaces target's ability with Vampirism if user made contact.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tconst sourceAbility = source.getAbility();\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\r\n\t\t\t// Check if the target's ability can be suppressed\r\n\t\t\tif (targetAbility.flags['cantsuppress'] || targetAbility.id === 'vampirism') {\r\n\t\t\t\treturn; // Exit if the target's ability cannot be replaced or is already Vampirism\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check if the move makes contact\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, !source.isAlly(target))) {\r\n\t\t\t\t// Replace the target's ability with Vampirism\r\n\t\t\t\tconst oldAbility = target.setAbility('vampirism', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Vampirism', this.dex.abilities.get(oldAbility).name, '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vampirism\",\r\n\t\trating: 3,\r\n\t\tnum: -24,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\twoodstove: {\r\n\t\tshortDesc: \"Ice does 50% less damage against user's side.\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Ice') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Wood Stove damage reduction from Ice-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Wood Stove, reducing damage from the Ice-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the user or any ally is frozen\r\n\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally.status === 'frz') {\r\n\t\t\t\t\tthis.add('-activate', ally, 'ability: Wood Stove');\r\n\t\t\t\t\tally.cureStatus(); // Cure the frozen status for the ally\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t // Also check the user of the ability\r\n\t\t\t if (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Wood Stove');\r\n\t\t\t\tpokemon.cureStatus(); // Cure the frozen status for the user\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\t// Grant immunity to freeze for the user and their allies\r\n\t\t\tif (type === 'frz') {\r\n\t\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\t\tfor (const ally of allies) {\r\n\t\t\t\t\tif (ally === pokemon || ally.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.add('-immune', ally, 'ability: Wood Stove');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // Prevent the freeze status from being applied\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wood Stove\",\r\n\t\trating: 2,\r\n\t\tnum: -25,\r\n\t},\r\n\t// end\r\n\r\n\t// start: modifying vanilla abilities\r\n\tleafguard: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n    \tonModifyDef(pokemon) {\r\n        // Check if the weather is sunny or Desolate Land\r\n\t\tif (this.field.isWeather('sunnyday') || this.field.isWeather('desolateland')) {\r\n            \treturn this.chainModify(1.5); // Increase Defense by 50%\r\n        \t}\r\n    \t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Leaf Guard\",\r\n\t\trating: 0.5,\r\n\t\tnum: 102,\r\n\t},\r\n\r\n\tmagmaarmor: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Magma Armor');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'frz') return false; // Prevent freezing\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t// Check if the move is Ice-type and reduce damage by 50%\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Magma Armor damage reduction from Ice-type move');\r\n\t\t\t\treturn this.chainModify(0.5); // Reduce damage by 50%\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magma Armor\",\r\n\t\trating: 0.5,\r\n\t\tnum: 40,\r\n\t},\r\n\r\n\trivalry: {\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Check if the attacker has an ally and both share the same gender\r\n\t\t\tconst ally = attacker.side.active.find(pokemon => pokemon && pokemon !== attacker);\r\n\t\t\tif (ally && attacker.gender && ally.gender) {\r\n\t\t\t\tif (attacker.gender === ally.gender) {\r\n\t\t\t\t\tthis.debug('Rivalry boost');\r\n\t\t\t\t\treturn this.chainModify(1.25); // Increase damage by 25%\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rivalry\",\r\n\t\trating: 0,\r\n\t\tnum: 79,\r\n\t},\r\n\r\n\tflowergift: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (!pokemon.isActive || pokemon.baseSpecies.baseSpecies !== 'Cherrim' || pokemon.transformed) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tif (pokemon.species.id !== 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim-Sunshine', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifyAtkPriority: 3,\r\n\t\tonAllyModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifySpDPriority: 4,\r\n\t\tonAllyModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, breakable: 1},\r\n\t\tname: \"Flower Gift\",\r\n\t\trating: 1,\r\n\t\tnum: 122,\r\n\t},\r\n\r\n\tstancechange: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (\r\n\t\t\t\t(!attacker.species.name.startsWith('Aegislash') && !attacker.species.name.startsWith('Ma\\'adowr')) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;//if using a non-kings-shield status move, or if using Flurry\r\n\t\t\tif (attacker.species.name === 'Aegislash' || attacker.species.name === 'Aegislash-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name === 'Aegislash-Ma\\'adowr' || attacker.species.name === 'Aegislash-Blade-Ma\\'adowr') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash-Ma\\'adowr' : 'Aegislash-Blade-Ma\\'adowr');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to ${move.id === 'kingsshield' ? 'Shield Forme' : 'Blade Forme'}!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\r\n\tzenmode: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst baseSpecies = pokemon.baseSpecies.baseSpecies;\r\n\t\t\tconst forme = pokemon.species.forme;\r\n\t\t\tif (!['Darmanitan', 'Immanicus'].includes(baseSpecies) || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Zen forms\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (['Darmanitan', 'Immanicus'].includes(pokemon.species.baseSpecies) && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst speciesId = pokemon.species.id;\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (speciesId === 'darmanitanzen' || speciesId === 'immanicuszen') return;\r\n\t\t\t\t\tif (speciesId === 'darmanitan') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t\tif (speciesId === 'immanicus') pokemon.formeChange('Immanicus-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (speciesId !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\t// end\r\n};\r\n"],
  "mappings": "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",
  "names": []
}

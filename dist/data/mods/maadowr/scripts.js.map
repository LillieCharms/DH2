{
  "version": 3,
  "sources": ["../../../../data/mods/maadowr/scripts.ts"],
  "sourcesContent": ["export const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tgen: 9,\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['Mega', 'MD', 'MD NFE', 'MD Ubers'],\r\n\t\tcustomDoublesTiers: ['Mega', 'MD', 'MD NFE', 'MD Ubers'],\r\n\t},\r\n\tinit() {\t\t\r\n\r\n\t\t// test\r\n\t//\tthis.modData(\"Learnsets\", \"paras\").learnset.earthpower = ['9M'];\r\n\r\n\t\tfor (const id in this.dataCache.Pokedex) {\r\n\t\t\tconst newMon = this.dataCache.Pokedex[id];\r\n\t\t\tif (!newMon || !newMon.copyData) continue; // weeding out Pok\u00E9mon that aren't new\r\n\t\t\tconst copyData = this.dataCache.Pokedex[this.toID(newMon.copyData)];\r\n\r\n\t\t\tif (!newMon.types && copyData.types) newMon.types = copyData.types;\r\n\t\t\tif (!newMon.baseStats && copyData.baseStats) newMon.baseStats = copyData.baseStats;\r\n\t\t\tif (!newMon.abilities && copyData.abilities) newMon.abilities = copyData.abilities;\r\n\t\t\tif (!newMon.num && copyData.num) newMon.num = copyData.num * -1; // inverting the original's dex number\r\n\t\t\tif (!newMon.genderRatio && copyData.genderRatio) newMon.genderRatio = copyData.genderRatio;\r\n\t\t\tif (!newMon.heightm && copyData.heightm) newMon.heightm = copyData.heightm;\r\n\t\t\tif (!newMon.weightkg && copyData.weightkg) newMon.weightkg = copyData.weightkg;\r\n\t\t\tif (!newMon.color && copyData.color) newMon.color = copyData.color;\r\n\t\t\tif (!newMon.eggGroups && copyData.eggGroups) newMon.eggGroups = copyData.eggGroups;\r\n\r\n\t\t\tlet copyMoves = newMon.copyData;\r\n\t\t\tif (newMon.copyMoves) copyMoves = newMon.copyMoves;\r\n\t\t\tif (copyMoves) {\r\n\t\t\t\tif (!this.dataCache.Learnsets[id]) this.dataCache.Learnsets[id] = {learnset: {}}; // create a blank learnset entry so we don't need a learnsets file (thank you ink)\r\n\t\t\t\tconst learnset = this.dataCache.Learnsets[this.toID(copyMoves)].learnset;\r\n\t\t\t\tfor (const moveid in learnset) {\r\n\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = learnset[moveid].filter(\r\n\t\t\t\t\t\t(method) => !method.includes('S')\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolAdditions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolAdditions) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', this.toID(id)).learnset[this.toID(move)] = [\"9M\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolDeletions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolDeletions) {\r\n\t\t\t\t\t\tdelete this.modData('Learnsets', this.toID(id)).learnset[this.toID(move)];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// hard-coding a bit for Eclipseroid specifically (may rework if we get more fusions later but kinda doubt)\r\n\t\t\t\tif (newMon.name === 'Eclipseroid') {\r\n\t\t\t\t\tfor (const moveid in this.dataCache.Learnsets[this.toID(\"Lunatone\")].learnset) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = this.dataCache.Learnsets[this.toID(\"Lunatone\")].learnset[moveid].filter(\r\n\t\t\t\t\t\t\t(method) => !method.includes('S')\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,UAAkD;AAAA,EAC9D,KAAK;AAAA,EACL,mBAAmB;AAAA,IAClB,sBAAsB;AAAA,IACtB,aAAa,CAAC,QAAQ,MAAM,UAAU,UAAU;AAAA,IAChD,oBAAoB,CAAC,QAAQ,MAAM,UAAU,UAAU;AAAA,EACxD;AAAA,EACA,OAAO;AAKN,eAAW,MAAM,KAAK,UAAU,SAAS;AACxC,YAAM,SAAS,KAAK,UAAU,QAAQ,EAAE;AACxC,UAAI,CAAC,UAAU,CAAC,OAAO;AAAU;AACjC,YAAM,WAAW,KAAK,UAAU,QAAQ,KAAK,KAAK,OAAO,QAAQ,CAAC;AAElE,UAAI,CAAC,OAAO,SAAS,SAAS;AAAO,eAAO,QAAQ,SAAS;AAC7D,UAAI,CAAC,OAAO,aAAa,SAAS;AAAW,eAAO,YAAY,SAAS;AACzE,UAAI,CAAC,OAAO,aAAa,SAAS;AAAW,eAAO,YAAY,SAAS;AACzE,UAAI,CAAC,OAAO,OAAO,SAAS;AAAK,eAAO,MAAM,SAAS,MAAM;AAC7D,UAAI,CAAC,OAAO,eAAe,SAAS;AAAa,eAAO,cAAc,SAAS;AAC/E,UAAI,CAAC,OAAO,WAAW,SAAS;AAAS,eAAO,UAAU,SAAS;AACnE,UAAI,CAAC,OAAO,YAAY,SAAS;AAAU,eAAO,WAAW,SAAS;AACtE,UAAI,CAAC,OAAO,SAAS,SAAS;AAAO,eAAO,QAAQ,SAAS;AAC7D,UAAI,CAAC,OAAO,aAAa,SAAS;AAAW,eAAO,YAAY,SAAS;AAEzE,UAAI,YAAY,OAAO;AACvB,UAAI,OAAO;AAAW,oBAAY,OAAO;AACzC,UAAI,WAAW;AACd,YAAI,CAAC,KAAK,UAAU,UAAU,EAAE;AAAG,eAAK,UAAU,UAAU,EAAE,IAAI,EAAC,UAAU,CAAC,EAAC;AAC/E,cAAM,WAAW,KAAK,UAAU,UAAU,KAAK,KAAK,SAAS,CAAC,EAAE;AAChE,mBAAW,UAAU,UAAU;AAC9B,eAAK,QAAQ,aAAa,EAAE,EAAE,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE;AAAA,YACjE,CAAC,WAAW,CAAC,OAAO,SAAS,GAAG;AAAA,UACjC;AAAA,QACD;AACA,YAAI,OAAO,mBAAmB;AAC7B,qBAAW,QAAQ,OAAO,mBAAmB;AAC5C,iBAAK,QAAQ,aAAa,KAAK,KAAK,EAAE,CAAC,EAAE,SAAS,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;AAAA,UAC3E;AAAA,QACD;AACA,YAAI,OAAO,mBAAmB;AAC7B,qBAAW,QAAQ,OAAO,mBAAmB;AAC5C,mBAAO,KAAK,QAAQ,aAAa,KAAK,KAAK,EAAE,CAAC,EAAE,SAAS,KAAK,KAAK,IAAI,CAAC;AAAA,UACzE;AAAA,QACD;AAEA,YAAI,OAAO,SAAS,eAAe;AAClC,qBAAW,UAAU,KAAK,UAAU,UAAU,KAAK,KAAK,UAAU,CAAC,EAAE,UAAU;AAC9E,iBAAK,QAAQ,aAAa,EAAE,EAAE,SAAS,MAAM,IAAI,KAAK,UAAU,UAAU,KAAK,KAAK,UAAU,CAAC,EAAE,SAAS,MAAM,EAAE;AAAA,cACjH,CAAC,WAAW,CAAC,OAAO,SAAS,GAAG;AAAA,YACjC;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
